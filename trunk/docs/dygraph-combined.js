/***

    MochiKit.MochiKit 1.4 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Base");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Base)=="undefined"){
MochiKit.Base={};
}
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=(MochiKit.__compat__||(typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined"));
}
MochiKit.Base.VERSION="1.4";
MochiKit.Base.NAME="MochiKit.Base";
MochiKit.Base.update=function(_1,_2){
if(_1===null){
_1={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_1[k]=o[k];
}
}
}
return _1;
};
MochiKit.Base.update(MochiKit.Base,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},camelize:function(_6){
var _7=_6.split("-");
var cc=_7[0];
for(var i=1;i<_7.length;i++){
cc+=_7[i].charAt(0).toUpperCase()+_7[i].substring(1);
}
return cc;
},counter:function(n){
if(arguments.length===0){
n=1;
}
return function(){
return n++;
};
},clone:function(_b){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=_b;
return new me();
}
},_flattenArray:function(_d,_e){
for(var i=0;i<_e.length;i++){
var o=_e[i];
if(o instanceof Array){
arguments.callee(_d,o);
}else{
_d.push(o);
}
}
return _d;
},flattenArray:function(lst){
return MochiKit.Base._flattenArray([],lst);
},flattenArguments:function(lst){
var res=[];
var m=MochiKit.Base;
var _15=m.extend(null,arguments);
while(_15.length){
var o=_15.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_15.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_18,obj,_1a){
if(!_1a){
_1a=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_18){
_18=[];
}
for(var i=_1a;i<l;i++){
_18.push(obj[i]);
}
}
return _18;
},updatetree:function(_1d,obj){
if(_1d===null){
_1d={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_1d[k])=="object"&&typeof (v)=="object"){
arguments.callee(_1d[k],v);
}else{
_1d[k]=v;
}
}
}
}
return _1d;
},setdefault:function(_23,obj){
if(_23===null){
_23={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _23)){
_23[k]=o[k];
}
}
}
return _23;
},keys:function(obj){
var _29=[];
for(var _2a in obj){
_29.push(_2a);
}
return _29;
},values:function(obj){
var _2c=[];
for(var _2d in obj){
_2c.push(obj[_2d]);
}
return _2c;
},items:function(obj){
var _2f=[];
var e;
for(var _31 in obj){
var v;
try{
v=obj[_31];
}
catch(e){
continue;
}
_2f.push([_31,v]);
}
return _2f;
},_newNamedError:function(_33,_34,_35){
_35.prototype=new MochiKit.Base.NamedError(_33.NAME+"."+_34);
_33[_34]=_35;
},operator:{truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},seq:function(a,b){
return a===b;
},sne:function(a,b){
return a!==b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
}},forwardCall:function(_73){
return function(){
return this[_73].apply(this,arguments);
};
},itemgetter:function(_74){
return function(arg){
return arg[_74];
};
},typeMatcher:function(){
var _76={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_76[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _76)){
return false;
}
}
return true;
};
},isNull:function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"||o.nodeType===3){
return false;
}
}
return true;
},isDateLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _87=[];
for(var i=1;i<arguments.length;i++){
_87.push(fn(arguments[i]));
}
return _87;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _8d=m.isArrayLike;
if(arguments.length<=2){
if(!_8d(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _8e=[];
for(var i=0;i<lst.length;i++){
_8e.push(fn(lst[i]));
}
return _8e;
}else{
if(fn===null){
fn=Array;
}
var _90=null;
for(i=1;i<arguments.length;i++){
if(!_8d(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_90===null||_90>l){
_90=l;
}
}
_8e=[];
for(i=0;i<_90;i++){
var _92=[];
for(var j=1;j<arguments.length;j++){
_92.push(arguments[j][i]);
}
_8e.push(fn.apply(this,_92));
}
return _8e;
}
},xfilter:function(fn){
var _95=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_95.push(o);
}
}
return _95;
},filter:function(fn,lst,_9a){
var _9b=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_9a);
}else{
if(typeof (_9a)=="undefined"||_9a===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_9b.push(o);
}
}
}else{
for(i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_9a,o)){
_9b.push(o);
}
}
}
}
return _9b;
},_wrapDumbFunction:function(_9f){
return function(){
switch(arguments.length){
case 0:
return _9f();
case 1:
return _9f(arguments[0]);
case 2:
return _9f(arguments[0],arguments[1]);
case 3:
return _9f(arguments[0],arguments[1],arguments[2]);
}
var _a0=[];
for(var i=0;i<arguments.length;i++){
_a0.push("arguments["+i+"]");
}
return eval("(func("+_a0.join(",")+"))");
};
},methodcaller:function(_a2){
var _a3=MochiKit.Base.extend(null,arguments,1);
if(typeof (_a2)=="function"){
return function(obj){
return _a2.apply(obj,_a3);
};
}else{
return function(obj){
return obj[_a2].apply(obj,_a3);
};
}
},method:function(_a6,_a7){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_a7,_a6],arguments,2));
},compose:function(f1,f2){
var _ab=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(m.repr(fn)+" is not a function");
}
_ab.push(fn);
}
return function(){
var _af=arguments;
for(var i=_ab.length-1;i>=0;i--){
_af=[_ab[i].apply(this,_af)];
}
return _af[0];
};
},bind:function(_b1,_b2){
if(typeof (_b1)=="string"){
_b1=_b2[_b1];
}
var _b3=_b1.im_func;
var _b4=_b1.im_preargs;
var _b5=_b1.im_self;
var m=MochiKit.Base;
if(typeof (_b1)=="function"&&typeof (_b1.apply)=="undefined"){
_b1=m._wrapDumbFunction(_b1);
}
if(typeof (_b3)!="function"){
_b3=_b1;
}
if(typeof (_b2)!="undefined"){
_b5=_b2;
}
if(typeof (_b4)=="undefined"){
_b4=[];
}else{
_b4=_b4.slice();
}
m.extend(_b4,arguments,2);
var _b7=function(){
var _b8=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_b8=m.concat(me.im_preargs,_b8);
}
var _ba=me.im_self;
if(!_ba){
_ba=this;
}
return me.im_func.apply(_ba,_b8);
};
_b7.im_self=_b5;
_b7.im_func=_b3;
_b7.im_preargs=_b4;
return _b7;
},bindMethods:function(_bb){
var _bc=MochiKit.Base.bind;
for(var k in _bb){
var _be=_bb[k];
if(typeof (_be)=="function"){
_bb[k]=_bc(_be,_bb);
}
}
},registerComparator:function(_bf,_c0,_c1,_c2){
MochiKit.Base.comparatorRegistry.register(_bf,_c0,_c1,_c2);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _c5=(typeof (a)=="undefined"||a===null);
var _c6=(typeof (b)=="undefined"||b===null);
if(_c5&&_c6){
return 0;
}else{
if(_c5){
return -1;
}else{
if(_c6){
return 1;
}
}
}
var m=MochiKit.Base;
var _c8=m._primitives;
if(!(typeof (a) in _c8&&typeof (b) in _c8)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _c9=m.repr;
throw new TypeError(_c9(a)+" and "+_c9(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _ce=MochiKit.Base.compare;
var _cf=a.length;
var _d0=0;
if(_cf>b.length){
_d0=1;
_cf=b.length;
}else{
if(_cf<b.length){
_d0=-1;
}
}
for(var i=0;i<_cf;i++){
var cmp=_ce(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _d0;
},registerRepr:function(_d3,_d4,_d5,_d6){
MochiKit.Base.reprRegistry.register(_d3,_d4,_d5,_d6);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
try{
var _d8=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
o=_d8.replace(/^\s+/,"");
var idx=o.indexOf("{");
if(idx!=-1){
o=o.substr(0,idx)+"{...}";
}
}
return _d8;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(_de,_df,_e0,_e1){
MochiKit.Base.jsonRegistry.register(_de,_df,_e0,_e1);
},evalJSON:function(){
return eval("("+arguments[0]+")");
},serializeJSON:function(o){
var _e3=typeof (o);
if(_e3=="number"||_e3=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}
}
var m=MochiKit.Base;
var _e5=m.reprString;
if(_e3=="string"){
return _e5(o);
}
var me=arguments.callee;
var _e7;
if(typeof (o.__json__)=="function"){
_e7=o.__json__();
if(o!==_e7){
return me(_e7);
}
}
if(typeof (o.json)=="function"){
_e7=o.json();
if(o!==_e7){
return me(_e7);
}
}
if(_e3!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
val="undefined";
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
try{
_e7=m.jsonRegistry.match(o);
if(o!==_e7){
return me(_e7);
}
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_e3=="undefined"){
throw new TypeError("undefined can not be serialized as JSON");
}
if(_e3=="function"){
return null;
}
res=[];
for(var k in o){
var _ec;
if(typeof (k)=="number"){
_ec="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_ec=_e5(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_ec+":"+val);
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(_ef,arr){
if(_ef.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(_ef,arr)===0);
},concat:function(){
var _f1=[];
var _f2=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_f2(_f1,arguments[i]);
}
return _f1;
},keyComparator:function(key){
var m=MochiKit.Base;
var _f6=m.compare;
if(arguments.length==1){
return function(a,b){
return _f6(a[key],b[key]);
};
}
var _f9=m.extend(null,arguments);
return function(a,b){
var _fc=0;
for(var i=0;(_fc===0)&&(i<_f9.length);i++){
var key=_f9[i];
_fc=_f6(a[key],b[key]);
}
return _fc;
};
},reverseKeyComparator:function(key){
var _100=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _100(b,a);
};
},partial:function(func){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_105,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _108=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_108(o,cur)==_105){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_10c,_10d,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_10d)=="undefined"||_10d===null){
_10d=0;
}
for(var i=_10d;i<end;i++){
if(lst[i]===_10c){
return i;
}
}
return -1;
},mean:function(){
var sum=0;
var m=MochiKit.Base;
var args=m.extend(null,arguments);
var _113=args.length;
while(args.length){
var o=args.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
_113+=o.length-1;
for(var i=o.length-1;i>=0;i--){
sum+=o[i];
}
}else{
sum+=o;
}
}
if(_113<=0){
throw new TypeError("mean() requires at least one argument");
}
return sum/_113;
},median:function(){
var data=MochiKit.Base.flattenArguments(arguments);
if(data.length===0){
throw new TypeError("median() requires at least one argument");
}
data.sort(compare);
if(data.length%2==0){
var _117=data.length/2;
return (data[_117]+data[_117-1])/2;
}else{
return data[(data.length-1)/2];
}
},findValue:function(lst,_119,_11a,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_11a)=="undefined"||_11a===null){
_11a=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_11a;i<end;i++){
if(cmp(lst[i],_119)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_11f){
var _120=[node];
var _121=MochiKit.Base.extend;
while(_120.length){
var res=_11f(_120.shift());
if(res){
_121(_120,res);
}
}
},nameFunctions:function(_123){
var base=_123.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _123){
var o=_123[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_127,_128){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_127)=="string"||(typeof (_127.nodeType)!="undefined"&&_127.nodeType>0))){
var kv=MochiKit.DOM.formContents(_127);
_127=kv[0];
_128=kv[1];
}else{
if(arguments.length==1){
if(typeof (_127.length)=="number"&&_127.length==2){
return arguments.callee(_127[0],_127[1]);
}
var o=_127;
_127=[];
_128=[];
for(var k in o){
var v=o[k];
if(typeof (v)=="function"){
continue;
}else{
if(typeof (v)!="string"&&typeof (v.length)=="number"){
for(var i=0;i<v.length;i++){
_127.push(k);
_128.push(v[i]);
}
}else{
_127.push(k);
_128.push(v);
}
}
}
}
}
var rval=[];
var len=Math.min(_127.length,_128.length);
var _130=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_128[i];
if(typeof (v)!="undefined"&&v!==null){
rval.push(_130(_127[i])+"="+_130(v));
}
}
return rval.join("&");
},parseQueryString:function(_131,_132){
var qstr=(_131.charAt(0)=="?")?_131.substring(1):_131;
var _134=qstr.replace(/\+/g,"%20").split(/(\&amp\;|\&\#38\;|\&#x26;|\&)/);
var o={};
var _136;
if(typeof (decodeURIComponent)!="undefined"){
_136=decodeURIComponent;
}else{
_136=unescape;
}
if(_132){
for(var i=0;i<_134.length;i++){
var pair=_134[i].split("=");
var name=_136(pair.shift());
if(!name){
continue;
}
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_136(pair.join("=")));
}
}else{
for(i=0;i<_134.length;i++){
pair=_134[i].split("=");
var name=pair.shift();
if(!name){
continue;
}
o[_136(name)]=_136(pair.join("="));
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_13c,wrap,_13e){
if(_13e){
this.pairs.unshift([name,_13c,wrap]);
}else{
this.pairs.push([name,_13c,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.EXPORT=["flattenArray","noop","camelize","counter","clone","extend","update","updatetree","setdefault","keys","values","items","NamedError","operator","forwardCall","itemgetter","typeMatcher","isCallable","isUndefined","isUndefinedOrNull","isNull","isEmpty","isNotEmpty","isArrayLike","isDateLike","xmap","map","xfilter","filter","methodcaller","compose","bind","bindMethods","NotFound","AdapterRegistry","registerComparator","compare","registerRepr","repr","objEqual","arrayEqual","concat","keyComparator","reverseKeyComparator","partial","merge","listMinMax","listMax","listMin","objMax","objMin","nodeWalk","zip","urlEncode","queryString","serializeJSON","registerJSON","evalJSON","parseQueryString","findValue","findIdentical","flattenArguments","method","average","mean","median"];
MochiKit.Base.EXPORT_OK=["nameFunctions","comparatorRegistry","reprRegistry","jsonRegistry","compareDateLike","compareArrayLike","reprArrayLike","reprString","reprNumber"];
MochiKit.Base._exportSymbols=function(_144,_145){
if(!MochiKit.__export__){
return;
}
var all=_145.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_144[all[i]]=_145[all[i]];
}
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=m.operator.identity;
m.forward=m.forwardCall;
m.find=m.findValue;
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_149){
return encodeURIComponent(_149).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_14a){
return escape(_14a).replace(/\+/g,"%2B").replace(/\"/g,"%22").rval.replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.update(m.NamedError.prototype,{repr:function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
},toString:m.forwardCall("repr")});
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.average=m.mean;
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
var all=m.concat(m.EXPORT,m.EXPORT_OK);
m.EXPORT_TAGS={":common":m.concat(m.EXPORT_OK),":all":all};
m.nameFunctions(this);
};
MochiKit.Base.__new__();
if(MochiKit.__export__){
compare=MochiKit.Base.compare;
compose=MochiKit.Base.compose;
serializeJSON=MochiKit.Base.serializeJSON;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Iter");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Iter depends on MochiKit.Base!";
}
if(typeof (MochiKit.Iter)=="undefined"){
MochiKit.Iter={};
}
MochiKit.Iter.NAME="MochiKit.Iter";
MochiKit.Iter.VERSION="1.4";
MochiKit.Base.update(MochiKit.Iter,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},registerIteratorFactory:function(name,_14e,_14f,_150){
MochiKit.Iter.iteratorRegistry.register(name,_14e,_14f,_150);
},iter:function(_151,_152){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_152;
},_151);
}
if(typeof (_151.next)=="function"){
return _151;
}else{
if(typeof (_151.iter)=="function"){
return _151.iter();
}
}
try{
return self.iteratorRegistry.match(_151);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_151)+": "+m.repr(_151)+" is not iterable");
}
throw e;
}
},count:function(n){
if(!n){
n=0;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _15c=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_15c.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_162){
return _162.next();
},izip:function(p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var next=self.next;
var _168=m.map(self.iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_168);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _174=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_174=arguments[1];
stop=arguments[2];
}else{
_174=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_174,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
var rval;
while(i<_174){
rval=seq.next();
i++;
}
if(_174>=stop){
throw self.StopIteration;
}
_174+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _17e=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_17e));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _189=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_189.length>1){
try{
return _189[0].next();
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_189.shift();
}
}
if(_189.length==1){
var arg=_189.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
},_tee:function(_194,sync,_196){
sync.pos[_194]=-1;
var m=MochiKit.Base;
var _198=m.listMin;
return {repr:function(){
return "tee("+_194+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_194];
if(i==sync.max){
rval=_196.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_194]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_194]+=1;
if(i==sync.min&&_198(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_19b,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1||typeof (n)=="undefined"||n===null){
n=2;
}
var self=MochiKit.Iter;
_19b=self.iter(_19b);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_19b));
}
return rval;
},list:function(_1a2){
var rval;
if(_1a2 instanceof Array){
return _1a2.slice();
}
if(typeof (_1a2)=="function"&&!(_1a2 instanceof Function)&&typeof (_1a2.length)=="number"){
rval=[];
for(var i=0;i<_1a2.length;i++){
rval.push(_1a2[i]);
}
return rval;
}
var self=MochiKit.Iter;
_1a2=self.iter(_1a2);
var rval=[];
try{
while(true){
rval.push(_1a2.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_1a7,_1a8){
var i=0;
var x=_1a8;
var self=MochiKit.Iter;
_1a7=self.iter(_1a7);
if(arguments.length<3){
try{
x=_1a7.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_1a7.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _1ac=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_1ac=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_1ac=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_1ac>=stop)||(step<0&&_1ac<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_1ac;
_1ac+=step;
return rval;
},repr:function(){
return "range("+[_1ac,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
},sum:function(_1b0,_1b1){
if(typeof (_1b1)=="undefined"||_1b1===null){
_1b1=0;
}
var x=_1b1;
var self=MochiKit.Iter;
_1b0=self.iter(_1b0);
try{
while(true){
x+=_1b0.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_1b4){
var self=MochiKit.Iter;
_1b4=self.iter(_1b4);
try{
while(true){
_1b4.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_1b6,func,self){
var m=MochiKit.Base;
if(arguments.length>2){
func=m.bind(func,self);
}
if(m.isArrayLike(_1b6)){
try{
for(var i=0;i<_1b6.length;i++){
func(_1b6[i]);
}
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
}
}else{
self=MochiKit.Iter;
self.exhaust(self.imap(func,_1b6));
}
},every:function(_1bb,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_1bb).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_1be,cmp){
var rval=MochiKit.Iter.list(_1be);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_1c1){
var rval=MochiKit.Iter.list(_1c1);
rval.reverse();
return rval;
},some:function(_1c3,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_1c3).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_1c7){
if(MochiKit.Base.isArrayLike(_1c7)){
for(var i=0;i<_1c7.length;i++){
lst.push(_1c7[i]);
}
}else{
var self=MochiKit.Iter;
_1c7=self.iter(_1c7);
try{
while(true){
lst.push(_1c7.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},groupby:function(_1ca,_1cb){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_1cb=m.operator.identity;
}
_1ca=self.iter(_1ca);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_1ca.next();
k=_1cb(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _1d2=true;
var _1d3=m.compare;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(_1d3(k,pk)===0){
fetch();
if(_1d2){
_1d2=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(_1d3(k,pk)!==0){
throw self.StopIteration;
}
return eat();
}}];
}};
},groupby_as_array:function(_1d4,_1d5){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_1d5=m.operator.identity;
}
_1d4=self.iter(_1d4);
var _1d8=[];
var _1d9=true;
var _1da;
var _1db=m.compare;
while(true){
try{
var _1dc=_1d4.next();
var key=_1d5(_1dc);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_1d9||_1db(key,_1da)!==0){
var _1de=[];
_1d8.push([key,_1de]);
}
_1de.push(_1dc);
_1d9=false;
_1da=key;
}
return _1d8;
},arrayLikeIter:function(_1df){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_1df.length){
throw MochiKit.Iter.StopIteration;
}
return _1df[i++];
}};
},hasIterateNext:function(_1e1){
return (_1e1&&typeof (_1e1.iterateNext)=="function");
},iterateNextIter:function(_1e2){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_1e2.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.EXPORT_OK=["iteratorRegistry","arrayLikeIter","hasIterateNext","iterateNextIter",];
MochiKit.Iter.EXPORT=["StopIteration","registerIteratorFactory","iter","count","cycle","repeat","next","izip","ifilter","ifilterfalse","islice","imap","applymap","chain","takewhile","dropwhile","tee","list","reduce","range","sum","exhaust","forEach","every","sorted","reversed","some","iextend","groupby","groupby_as_array"];
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
if(typeof (StopIteration)!="undefined"){
this.StopIteration=StopIteration;
}else{
this.StopIteration=new m.NamedError("StopIteration");
}
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
if(MochiKit.__export__){
reduce=MochiKit.Iter.reduce;
}
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Format");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Format)=="undefined"){
MochiKit.Format={};
}
MochiKit.Format.NAME="MochiKit.Format";
MochiKit.Format.VERSION="1.4";
MochiKit.Format.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Format.toString=function(){
return this.__repr__();
};
MochiKit.Format._numberFormatter=function(_1e5,_1e6,_1e7,_1e8,_1e9,_1ea,_1eb,_1ec,_1ed){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num===null||isNaN(num)){
return _1e5;
}
var _1ef=_1e6;
var _1f0=_1e7;
if(num<0){
num=-num;
}else{
_1ef=_1ef.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_1e8);
if(_1e9){
num=num*100;
_1f0=fmt.percent+_1f0;
}
num=MochiKit.Format.roundToFixed(num,_1ea);
var _1f3=num.split(/\./);
var _1f4=_1f3[0];
var frac=(_1f3.length==1)?"":_1f3[1];
var res="";
while(_1f4.length<_1eb){
_1f4="0"+_1f4;
}
if(_1ec){
while(_1f4.length>_1ec){
var i=_1f4.length-_1ec;
res=fmt.separator+_1f4.substring(i,_1f4.length)+res;
_1f4=_1f4.substring(0,i);
}
}
res=_1f4+res;
if(_1ea>0){
while(frac.length<_1ed){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _1ef+res+_1f0;
};
};
MochiKit.Format.numberFormatter=function(_1f8,_1f9,_1fa){
if(typeof (_1f9)=="undefined"){
_1f9="";
}
var _1fb=_1f8.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_1fb){
throw TypeError("Invalid pattern");
}
var _1fc=_1f8.substr(0,_1fb.index);
var _1fd=_1f8.substr(_1fb.index+_1fb[0].length);
if(_1fc.search(/-/)==-1){
_1fc=_1fc+"-";
}
var _1fe=_1fb[1];
var frac=(typeof (_1fb[2])=="string"&&_1fb[2]!="")?_1fb[2]:"";
var _200=(typeof (_1fb[3])=="string"&&_1fb[3]!="");
var tmp=_1fe.split(/,/);
var _202;
if(typeof (_1fa)=="undefined"){
_1fa="default";
}
if(tmp.length==1){
_202=null;
}else{
_202=tmp[1].length;
}
var _203=_1fe.length-_1fe.replace(/0/g,"").length;
var _204=frac.length-frac.replace(/0/g,"").length;
var _205=frac.length;
var rval=MochiKit.Format._numberFormatter(_1f9,_1fc,_1fd,_1fa,_200,_205,_203,_202,_204);
var m=MochiKit.Base;
if(m){
var fn=arguments.callee;
var args=m.concat(arguments);
rval.repr=function(){
return [self.NAME,"(",map(m.repr,args).join(", "),")"].join("");
};
}
return rval;
};
MochiKit.Format.formatLocale=function(_20a){
if(typeof (_20a)=="undefined"||_20a===null){
_20a="default";
}
if(typeof (_20a)=="string"){
var rval=MochiKit.Format.LOCALE[_20a];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_20a]=rval;
}
return rval;
}else{
return _20a;
}
};
MochiKit.Format.twoDigitAverage=function(_20c,_20d){
if(_20d){
var res=_20c/_20d;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(_20c/_20d);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_20f){
var sign=(_20f<0?"-":"");
var s=Math.floor(Math.abs(_20f)*100).toString();
if(s=="0"){
return s;
}
if(s.length<3){
while(s.charAt(s.length-1)=="0"){
s=s.substring(0,s.length-1);
}
return sign+"0."+s;
}
var head=sign+s.substring(0,s.length-2);
var tail=s.substring(s.length-2,s.length);
if(tail=="00"){
return head;
}else{
if(tail.charAt(1)=="0"){
return head+"."+tail.charAt(0);
}else{
return head+"."+tail;
}
}
};
MochiKit.Format.lstrip=function(str,_215){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_215){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_215+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_217){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_217){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_217+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_219){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_219),_219);
};
MochiKit.Format.truncToFixed=function(_21b,_21c){
_21b=Math.floor(_21b*Math.pow(10,_21c));
var res=(_21b*Math.pow(10,-_21c)).toFixed(_21c);
if(res.charAt(0)=="."){
res="0"+res;
}
return res;
};
MochiKit.Format.roundToFixed=function(_21e,_21f){
return MochiKit.Format.truncToFixed(_21e+0.5*Math.pow(10,-_21f),_21f);
};
MochiKit.Format.percentFormat=function(_220){
return MochiKit.Format.twoDigitFloat(100*_220)+"%";
};
MochiKit.Format.EXPORT=["truncToFixed","roundToFixed","numberFormatter","formatLocale","twoDigitAverage","twoDigitFloat","percentFormat","lstrip","rstrip","strip"];
MochiKit.Format.LOCALE={en_US:{separator:",",decimal:".",percent:"%"},de_DE:{separator:".",decimal:",",percent:"%"},fr_FR:{separator:" ",decimal:",",percent:"%"},"default":"en_US"};
MochiKit.Format.EXPORT_OK=[];
MochiKit.Format.EXPORT_TAGS={":all":MochiKit.Format.EXPORT,":common":MochiKit.Format.EXPORT};
MochiKit.Format.__new__=function(){
var base=this.NAME+".";
var k,v,o;
for(k in this.LOCALE){
o=this.LOCALE[k];
if(typeof (o)=="object"){
o.repr=function(){
return this.NAME;
};
o.NAME=base+"LOCALE."+k;
}
}
for(k in this){
o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.Format.__new__();
if(typeof (MochiKit.Base)!="undefined"){
MochiKit.Base._exportSymbols(this,MochiKit.Format);
}else{
(function(_225,_226){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(MochiKit.__export__===false)){
var all=_226.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_225[all[i]]=_226[all[i]];
}
}
})(this,MochiKit.Format);
}
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.DOM");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.DOM depends on MochiKit.Base!";
}
if(typeof (MochiKit.DOM)=="undefined"){
MochiKit.DOM={};
}
MochiKit.DOM.NAME="MochiKit.DOM";
MochiKit.DOM.VERSION="1.4";
MochiKit.DOM.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DOM.toString=function(){
return this.__repr__();
};
MochiKit.DOM.EXPORT=["removeEmptyTextNodes","formContents","currentWindow","currentDocument","withWindow","withDocument","registerDOMConverter","coerceToDOM","createDOM","createDOMFunc","isChildNode","getNodeAttribute","removeNodeAttribute","setNodeAttribute","updateNodeAttributes","appendChildNodes","insertSiblingNodesAfter","insertSiblingNodesBefore","replaceChildNodes","removeElement","swapDOM","BUTTON","TT","PRE","H1","H2","H3","BR","CANVAS","HR","LABEL","TEXTAREA","FORM","STRONG","SELECT","OPTION","OPTGROUP","LEGEND","FIELDSET","P","UL","OL","LI","TD","TR","THEAD","TBODY","TFOOT","TABLE","TH","INPUT","SPAN","A","DIV","IMG","getElement","$","getElementsByTagAndClassName","addToCallStack","addLoadEvent","focusOnLoad","setElementClass","toggleElementClass","addElementClass","removeElementClass","swapElementClass","hasElementClass","escapeHTML","toHTML","emitHTML","scrapeText","isParent","getFirstParentByTagAndClassName","makeClipping","undoClipping","makePositioned","undoPositioned","getFirstElementByTagAndClassName"];
MochiKit.DOM.EXPORT_OK=["domConverters"];
MochiKit.DOM.DEPRECATED=[["computedStyle","MochiKit.Style.getStyle","1.4"],["elementDimensions","MochiKit.Style.getElementDimensions","1.4"],["elementPosition","MochiKit.Style.getElementPosition","1.4"],["hideElement","MochiKit.Style.hideElement","1.4"],["setElementDimensions","MochiKit.Style.setElementDimensions","1.4"],["setElementPosition","MochiKit.Style.setElementPosition","1.4"],["setDisplayForElement","MochiKit.Style.setDisplayForElement","1.4"],["setOpacity","MochiKit.Style.setOpacity","1.4"],["showElement","MochiKit.Style.showElement","1.4"],["Coordinates","MochiKit.Style.Coordinates","1.4"],["Dimensions","MochiKit.Style.Dimensions","1.4"]];
MochiKit.DOM.getViewportDimensions=new Function(""+"if (!MochiKit[\"Style\"]) {"+"    throw new Error(\"This function has been deprecated and depends on MochiKit.Style.\");"+"}"+"return MochiKit.Style.getViewportDimensions.apply(this, arguments);");
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _22c=self._document;
var _22d=self._window;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_22d;
self._document=_22c;
throw e;
}
self._window=_22d;
self._document=_22c;
return rval;
},formContents:function(elem){
var _230=[];
var _231=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document.body;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _236=elem.tagName.toUpperCase();
if(_236==="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_236==="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_230.push(name);
_231.push(v);
return null;
}
_230.push(name);
_231.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_230.push(name);
_231.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_230.push(name);
_231.push(v);
}
return null;
}
}
if(_236==="FORM"||_236==="P"||_236==="SPAN"||_236==="DIV"){
return elem.childNodes;
}
_230.push(name);
_231.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_230,_231];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _23f=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_23f;
throw e;
}
self._document=_23f;
return rval;
},registerDOMConverter:function(name,_242,wrap,_244){
MochiKit.DOM.domConverters.register(name,_242,wrap,_244);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _24b=im.repeat;
var map=m.map;
}
var _24d=self.domConverters;
var _24e=arguments.callee;
var _24f=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node)=="function"&&typeof (node.length)=="number"&&!(node instanceof Function)){
node=im.list(node);
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _250=null;
try{
_250=iter(node);
}
catch(e){
}
if(_250){
return map(_24e,_250,_24b(ctx));
}
}
try{
node=_24d.match(node,ctx);
continue;
}
catch(e){
if(e!=_24f){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},isChildNode:function(node,_252){
var self=MochiKit.DOM;
if(typeof (node)=="string"){
node=self.getElement(node);
}
if(typeof (_252)=="string"){
_252=self.getElement(_252);
}
if(node===_252){
return true;
}
while(node&&node.tagName.toUpperCase()!="BODY"){
node=node.parentNode;
if(node===_252){
return true;
}
}
return false;
},setNodeAttribute:function(node,attr,_256){
var o={};
o[attr]=_256;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _25b=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_25b){
return node[_25b];
}
return node.getAttribute(attr);
}
catch(e){
}
return null;
},removeNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _25f=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_25f){
return node[_25f];
}
return node.removeAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_261){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_261){
var _264=MochiKit.Base.updatetree;
if(self.attributeArray.compliant){
for(var k in _261){
var v=_261[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
_264(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}else{
var _267=self.attributeArray.renames;
for(var k in _261){
v=_261[k];
var _268=_267[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_268)=="string"){
elem[_268]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
_264(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
}
}
}
return elem;
},appendChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _26c=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _26d=MochiKit.Base.concat;
while(_26c.length){
var n=_26c.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_26c=_26d(n,_26c);
}
}
}
return elem;
},insertSiblingNodesBefore:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _272=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _273=elem.parentNode;
var _274=MochiKit.Base.concat;
while(_272.length){
var n=_272.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
_273.insertBefore(n,elem);
}else{
_272=_274(n,_272);
}
}
}
return _273;
},insertSiblingNodesAfter:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _279=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
if(elem.nextSibling){
return self.insertSiblingNodesBefore(elem.nextSibling,_279);
}else{
return self.appendChildNodes(elem.parentNode,_279);
}
},replaceChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _27d;
while((_27d=elem.firstChild)){
elem.removeChild(_27d);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_27f){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_27f)=="string"||typeof (_27f)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
var _284=self._xhtml;
if(_27f&&!self.attributeArray.compliant){
var _285="";
if("name" in _27f){
_285+=" name=\""+self.escapeHTML(_27f.name)+"\"";
}
if(name=="input"&&"type" in _27f){
_285+=" type=\""+self.escapeHTML(_27f.type)+"\"";
}
if(_285){
name="<"+name+_285+">";
_284=false;
}
}
var d=self._document;
if(_284&&d===document){
elem=d.createElementNS("http://www.w3.org/1999/xhtml",name);
}else{
elem=d.createElement(name);
}
}else{
elem=name;
}
if(_27f){
self.updateNodeAttributes(elem,_27f);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},removeElement:function(elem){
var e=MochiKit.DOM.getElement(elem);
e.parentNode.removeChild(e);
return e;
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _28d=dest.parentNode;
if(src){
src=self.getElement(src);
_28d.replaceChild(src,dest);
}else{
_28d.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByTagAndClassName:function(_290,_291,_292){
var self=MochiKit.DOM;
if(typeof (_290)=="undefined"||_290===null){
_290="*";
}
if(typeof (_292)=="undefined"||_292===null){
_292=self._document;
}
_292=self.getElement(_292);
var _294=(_292.getElementsByTagName(_290)||self._document.all);
if(typeof (_291)=="undefined"||_291===null){
return MochiKit.Base.extend(null,_294);
}
var _295=[];
for(var i=0;i<_294.length;i++){
var _297=_294[i];
var cls=_297.className;
if(!cls){
continue;
}
var _299=cls.split(" ");
for(var j=0;j<_299.length;j++){
if(_299[j]==_291){
_295.push(_297);
break;
}
}
}
return _295;
},_newCallStack:function(path,once){
var rval=function(){
var _29e=arguments.callee.callStack;
for(var i=0;i<_29e.length;i++){
if(_29e[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_2a0,path,func,once){
var self=MochiKit.DOM;
var _2a5=_2a0[path];
var _2a6=_2a5;
if(!(typeof (_2a5)=="function"&&typeof (_2a5.callStack)=="object"&&_2a5.callStack!==null)){
_2a6=self._newCallStack(path,once);
if(typeof (_2a5)=="function"){
_2a6.callStack.push(_2a5);
}
_2a0[path]=_2a6;
}
_2a6.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_2a9){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_2a9=self.getElement(_2a9);
if(_2a9){
_2a9.focus();
}
});
},setElementClass:function(_2ab,_2ac){
var self=MochiKit.DOM;
var obj=self.getElement(_2ab);
if(self.attributeArray.compliant){
obj.setAttribute("class",_2ac);
}else{
obj.setAttribute("className",_2ac);
}
},toggleElementClass:function(_2af){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_2af)){
self.removeElementClass(obj,_2af);
}
}
},addElementClass:function(_2b3,_2b4){
var self=MochiKit.DOM;
var obj=self.getElement(_2b3);
var cls=obj.className;
if(cls==undefined||cls.length===0){
self.setElementClass(obj,_2b4);
return true;
}
if(cls==_2b4){
return false;
}
var _2b8=cls.split(" ");
for(var i=0;i<_2b8.length;i++){
if(_2b8[i]==_2b4){
return false;
}
}
self.setElementClass(obj,cls+" "+_2b4);
return true;
},removeElementClass:function(_2ba,_2bb){
var self=MochiKit.DOM;
var obj=self.getElement(_2ba);
var cls=obj.className;
if(cls==undefined||cls.length===0){
return false;
}
if(cls==_2bb){
self.setElementClass(obj,"");
return true;
}
var _2bf=cls.split(" ");
for(var i=0;i<_2bf.length;i++){
if(_2bf[i]==_2bb){
_2bf.splice(i,1);
self.setElementClass(obj,_2bf.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_2c1,_2c2,_2c3){
var obj=MochiKit.DOM.getElement(_2c1);
var res=MochiKit.DOM.removeElementClass(obj,_2c2);
if(res){
MochiKit.DOM.addElementClass(obj,_2c3);
}
return res;
},hasElementClass:function(_2c6,_2c7){
var obj=MochiKit.DOM.getElement(_2c6);
var cls=obj.className;
if(!cls){
return false;
}
var _2ca=cls.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_2ca.length;j++){
if(_2ca[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _2d2=[dom];
var self=MochiKit.DOM;
var _2d4=self.escapeHTML;
var _2d5=self.attributeArray;
while(_2d2.length){
dom=_2d2.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.tagName.toLowerCase());
var _2d6=[];
var _2d7=_2d5(dom);
for(var i=0;i<_2d7.length;i++){
var a=_2d7[i];
_2d6.push([" ",a.name,"=\"",_2d4(a.value),"\""]);
}
_2d6.sort();
for(i=0;i<_2d6.length;i++){
var _2da=_2d6[i];
for(var j=0;j<_2da.length;j++){
lst.push(_2da[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_2d2.push("</"+dom.tagName.toLowerCase()+">");
var _2dc=dom.childNodes;
for(i=_2dc.length-1;i>=0;i--){
_2d2.push(_2dc[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_2d4(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_2de){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _2e3=node.nodeValue;
if(typeof (_2e3)=="string"){
rval.push(_2e3);
}
})(MochiKit.DOM.getElement(node));
if(_2de){
return rval;
}else{
return rval.join("");
}
},removeEmptyTextNodes:function(_2e4){
_2e4=MochiKit.DOM.getElement(_2e4);
for(var i=0;i<_2e4.childNodes.length;i++){
var node=_2e4.childNodes[i];
if(node.nodeType==3&&!/\S/.test(node.nodeValue)){
node.parentNode.removeChild(node);
}
}
},makeClipping:function(_2e7){
_2e7=MochiKit.DOM.getElement(_2e7);
var _2e8=_2e7.style.overflow;
if((MochiKit.Style.getStyle(_2e7,"overflow")||"visible")!="hidden"){
_2e7.style.overflow="hidden";
}
return _2e8;
},undoClipping:function(_2e9,_2ea){
_2e9=MochiKit.DOM.getElement(_2e9);
if(!_2ea){
return;
}
_2e9.style.overflow=_2ea;
},makePositioned:function(_2eb){
_2eb=MochiKit.DOM.getElement(_2eb);
var pos=MochiKit.Style.getStyle(_2eb,"position");
if(pos=="static"||!pos){
_2eb.style.position="relative";
if(/Opera/.test(navigator.userAgent)){
_2eb.style.top=0;
_2eb.style.left=0;
}
}
},undoPositioned:function(_2ed){
_2ed=MochiKit.DOM.getElement(_2ed);
if(_2ed.style.position=="relative"){
_2ed.style.position=_2ed.style.top=_2ed.style.left=_2ed.style.bottom=_2ed.style.right="";
}
},getFirstElementByTagAndClassName:function(_2ee,_2ef,_2f0){
var self=MochiKit.DOM;
if(typeof (_2ee)=="undefined"||_2ee===null){
_2ee="*";
}
if(typeof (_2f0)=="undefined"||_2f0===null){
_2f0=self._document;
}
_2f0=self.getElement(_2f0);
var _2f2=(_2f0.getElementsByTagName(_2ee)||self._document.all);
if(typeof (_2ef)=="undefined"||_2ef===null){
return _2f2[0];
}
for(var i=0;i<_2f2.length;i++){
var _2f4=_2f2[i];
var _2f5=_2f4.className.split(" ");
for(var j=0;j<_2f5.length;j++){
if(_2f5[j]==_2ef){
return _2f4;
}
}
}
},getFirstParentByTagAndClassName:function(elem,_2f8,_2f9){
var self=MochiKit.DOM;
elem=self.getElement(elem);
if(typeof (_2f8)=="undefined"||_2f8===null){
_2f8="*";
}else{
_2f8=_2f8.toUpperCase();
}
if(typeof (_2f9)=="undefined"||_2f9===null){
_2f9=null;
}
var _2fb="";
var _2fc="";
while(elem&&elem.tagName){
elem=elem.parentNode;
if(_2f8=="*"&&_2f9===null){
return elem;
}
_2fb=elem.className.split(" ");
_2fc=elem.tagName.toUpperCase();
if(_2f9===null&&_2f8==_2fc){
return elem;
}else{
if(_2f9!==null){
for(var i=0;i<_2fb.length;i++){
if(_2f8=="*"&&_2fb[i]==_2f9){
return elem;
}else{
if(_2f8==_2fc&&_2fb[i]==_2f9){
return elem;
}
}
}
}
}
}
return elem;
},isParent:function(_2fe,_2ff){
if(!_2fe.parentNode||_2fe==_2ff){
return false;
}
if(_2fe.parentNode==_2ff){
return true;
}
return MochiKit.DOM.isParent(_2fe.parentNode,_2ff);
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
var _302="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
this._xhtml=(document.documentElement&&document.createElementNS&&document.documentElement.namespaceURI===_302);
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
this.domConverters=new m.AdapterRegistry();
var _303=this._document.createElement("span");
var _304;
if(_303&&_303.attributes&&_303.attributes.length>0){
var _305=m.filter;
_304=function(node){
return _305(_304.ignoreAttrFilter,node.attributes);
};
_304.ignoreAttr={};
var _307=_303.attributes;
var _308=_304.ignoreAttr;
for(var i=0;i<_307.length;i++){
var a=_307[i];
_308[a.name]=a.value;
}
_304.ignoreAttrFilter=function(a){
return (_304.ignoreAttr[a.name]!=a.value);
};
_304.compliant=false;
_304.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor","readonly":"readOnly","colspan":"colSpan","bgcolor":"bgColor","cellspacing":"cellSpacing","cellpadding":"cellPadding"};
}else{
_304=function(node){
return node.attributes;
};
_304.compliant=true;
_304.renames={};
}
this.attributeArray=_304;
var _30d=function(_30e,arr){
var _310=arr[1].split(".");
var str="";
var obj={};
str+="if (!MochiKit."+_310[1]+") { throw new Error(\"";
str+="This function has been deprecated and depends on MochiKit.";
str+=_310[1]+".\");}";
str+="return MochiKit."+_310[1]+"."+arr[0];
str+=".apply(this, arguments);";
obj[_310[2]]=new Function(str);
MochiKit.Base.update(MochiKit[_30e],obj);
};
for(var i;i<MochiKit.DOM.DEPRECATED.length;i++){
_30d("DOM",MochiKit.DOM.DEPRECATED[i]);
}
var _313=this.createDOMFunc;
this.UL=_313("ul");
this.OL=_313("ol");
this.LI=_313("li");
this.TD=_313("td");
this.TR=_313("tr");
this.TBODY=_313("tbody");
this.THEAD=_313("thead");
this.TFOOT=_313("tfoot");
this.TABLE=_313("table");
this.TH=_313("th");
this.INPUT=_313("input");
this.SPAN=_313("span");
this.A=_313("a");
this.DIV=_313("div");
this.IMG=_313("img");
this.BUTTON=_313("button");
this.TT=_313("tt");
this.PRE=_313("pre");
this.H1=_313("h1");
this.H2=_313("h2");
this.H3=_313("h3");
this.BR=_313("br");
this.HR=_313("hr");
this.LABEL=_313("label");
this.TEXTAREA=_313("textarea");
this.FORM=_313("form");
this.P=_313("p");
this.SELECT=_313("select");
this.OPTION=_313("option");
this.OPTGROUP=_313("optgroup");
this.LEGEND=_313("legend");
this.FIELDSET=_313("fieldset");
this.STRONG=_313("strong");
this.CANVAS=_313("canvas");
this.$=this.getElement;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(MochiKit.__export__){
withWindow=MochiKit.DOM.withWindow;
withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Style");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Style depends on MochiKit.Base!";
}
try{
if(typeof (MochiKit.DOM)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Style depends on MochiKit.DOM!";
}
if(typeof (MochiKit.Style)=="undefined"){
MochiKit.Style={};
}
MochiKit.Style.NAME="MochiKit.Style";
MochiKit.Style.VERSION="1.4";
MochiKit.Style.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Style.toString=function(){
return this.__repr__();
};
MochiKit.Style.EXPORT_OK=[];
MochiKit.Style.EXPORT=["setStyle","setOpacity","getStyle","getElementDimensions","elementDimensions","setElementDimensions","getElementPosition","elementPosition","setElementPosition","setDisplayForElement","hideElement","showElement","getViewportDimensions","getViewportPosition","Dimensions","Coordinates"];
MochiKit.Style.Dimensions=function(w,h){
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{getStyle:function(elem,_31b){
var dom=MochiKit.DOM;
var d=dom._document;
elem=dom.getElement(elem);
_31b=MochiKit.Base.camelize(_31b);
if(!elem||elem==d){
return undefined;
}
if(_31b=="opacity"&&elem.filters){
var _31e=(MochiKit.Style.getStyle(elem,"filter")||"").match(/alpha\(opacity=(.*)\)/);
if(_31e&&_31e[1]){
return parseFloat(_31e[1])/100;
}
return 1;
}
var _31f=elem.style?elem.style[_31b]:null;
if(!_31f){
if(d.defaultView&&d.defaultView.getComputedStyle){
var css=d.defaultView.getComputedStyle(elem,null);
_31b=_31b.replace(/([A-Z])/g,"-$1").toLowerCase();
_31f=css?css.getPropertyValue(_31b):null;
}else{
if(elem.currentStyle){
_31f=elem.currentStyle[_31b];
}
}
}
if(_31b=="opacity"){
_31f=parseFloat(_31f);
}
if(/Opera/.test(navigator.userAgent)&&(MochiKit.Base.find(["left","top","right","bottom"],_31b)!=-1)){
if(MochiKit.Style.getStyle(elem,"position")=="static"){
_31f="auto";
}
}
return _31f=="auto"?null:_31f;
},setStyle:function(elem,_322){
elem=MochiKit.DOM.getElement(elem);
for(var name in _322){
if(name=="opacity"){
MochiKit.Style.setOpacity(elem,_322[name]);
}else{
elem.style[MochiKit.Base.camelize(name)]=_322[name];
}
}
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
var self=MochiKit.Style;
if(o==1){
var _327=/Gecko/.test(navigator.userAgent)&&!(/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent));
elem.style["opacity"]=_327?0.999999:1;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"");
}
}else{
if(o<0.00001){
o=0;
}
elem.style["opacity"]=o;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"")+"alpha(opacity="+o*100+")";
}
}
},getElementPosition:function(elem,_329){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem||(!(elem.x&&elem.y)&&(!elem.parentNode===null||self.getStyle(elem,"display")=="none"))){
return undefined;
}
var c=new self.Coordinates(0,0);
var box=null;
var _32e=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(!elem.parentNode&&elem.x&&elem.y){
c.x+=elem.x||0;
c.y+=elem.y||0;
}else{
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_32e=elem.offsetParent;
if(_32e!=elem){
while(_32e){
c.x+=_32e.offsetLeft;
c.y+=_32e.offsetTop;
_32e=_32e.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("AppleWebKit")!=-1&&self.getStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
}
}
}
if(typeof (_329)!="undefined"){
_329=arguments.callee(_329);
if(_329){
c.x-=(_329.x||0);
c.y-=(_329.y||0);
}
}
if(elem.parentNode){
_32e=elem.parentNode;
}else{
_32e=null;
}
while(_32e){
var _333=_32e.tagName.toUpperCase();
if(_333==="BODY"||_333==="HTML"){
break;
}
var disp=self.getStyle(_32e,"display");
if(disp!="inline"&&disp!="table-row"){
c.x-=_32e.scrollLeft;
c.y-=_32e.scrollTop;
}
if(_32e.parentNode){
_32e=_32e.parentNode;
}else{
_32e=null;
}
}
return c;
},setElementPosition:function(elem,_336,_337){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_337)=="undefined"){
_337="px";
}
var _338={};
var _339=MochiKit.Base.isUndefinedOrNull;
if(!_339(_336.x)){
_338["left"]=_336.x+_337;
}
if(!_339(_336.y)){
_338["top"]=_336.y+_337;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_338});
},getElementDimensions:function(elem){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var disp=self.getStyle(elem,"display");
if(disp!="none"&&disp!==""&&typeof (disp)!="undefined"){
return new self.Dimensions(elem.offsetWidth||0,elem.offsetHeight||0);
}
var s=elem.style;
var _33f=s.visibility;
var _340=s.position;
s.visibility="hidden";
s.position="absolute";
s.display="";
var _341=elem.offsetWidth;
var _342=elem.offsetHeight;
s.display="none";
s.position=_340;
s.visibility=_33f;
return new self.Dimensions(_341,_342);
},setElementDimensions:function(elem,_344,_345){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_345)=="undefined"){
_345="px";
}
var _346={};
var _347=MochiKit.Base.isUndefinedOrNull;
if(!_347(_344.w)){
_346["width"]=_344.w+_345;
}
if(!_347(_344.h)){
_346["height"]=_344.h+_345;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_346});
},setDisplayForElement:function(_348,_349){
var _34a=MochiKit.Base.extend(null,arguments,1);
var _34b=MochiKit.DOM.getElement;
for(var i=0;i<_34a.length;i++){
_349=_34b(_34a[i]);
if(_349){
_349.style.display=_348;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},getViewportPosition:function(){
var c=new MochiKit.Style.Coordinates(0,0);
var d=MochiKit.DOM._document;
var de=d.documentElement;
var db=d.body;
if(de&&(de.scrollTop||de.scrollLeft)){
c.x=de.scrollLeft;
c.y=de.scrollTop;
}else{
if(db){
c.x=db.scrollLeft;
c.y=db.scrollTop;
}
}
return c;
},__new__:function(){
var m=MochiKit.Base;
this.elementPosition=this.getElementPosition;
this.elementDimensions=this.getElementDimensions;
this.hideElement=m.partial(this.setDisplayForElement,"none");
this.showElement=m.partial(this.setDisplayForElement,"block");
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Color");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
dojo.require("MochiKit.Style");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.Style",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Color depends on MochiKit.Base";
}
try{
if(typeof (MochiKit.DOM)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Color depends on MochiKit.DOM";
}
try{
if(typeof (MochiKit.Style)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Color depends on MochiKit.Style";
}
if(typeof (MochiKit.Color)=="undefined"){
MochiKit.Color={};
}
MochiKit.Color.NAME="MochiKit.Color";
MochiKit.Color.VERSION="1.4";
MochiKit.Color.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Color.toString=function(){
return this.__repr__();
};
MochiKit.Color.Color=function(red,_356,blue,_358){
if(typeof (_358)=="undefined"||_358===null){
_358=1;
}
this.rgb={r:red,g:_356,b:blue,a:_358};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_359){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_359);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_35f){
var hsl=this.asHSL();
hsl.s=_35f;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_362){
var hsl=this.asHSL();
hsl.l=_362;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_365){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_365,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_368){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_368,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_36b,_36c){
if(typeof (_36c)=="undefined"||_36c===null){
_36c=0.5;
}
var sf=1-_36c;
var s=this.rgb;
var d=_36b.rgb;
var df=_36c;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_371){
var a=this.asRGB();
var b=_371.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().b>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv===null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl===null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_388,blue,_38a){
var _38b=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_388=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_38a=undefined;
}else{
_38a=rgb.a;
}
}
return new _38b(red,_388,blue,_38a);
},fromHSL:function(hue,_38e,_38f,_390){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_393,_394,_395){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _398=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _399=_398._namedColors[name.toLowerCase()];
if(typeof (_399)=="string"){
return _398.fromHexString(_399);
}else{
if(name=="transparent"){
return _398.transparentColor();
}
}
return null;
},fromString:function(_39a){
var self=MochiKit.Color.Color;
var _39c=_39a.substr(0,3);
if(_39c=="rgb"){
return self.fromRGBString(_39a);
}else{
if(_39c=="hsl"){
return self.fromHSLString(_39a);
}else{
if(_39a.charAt(0)=="#"){
return self.fromHexString(_39a);
}
}
}
return self.fromName(_39a);
},fromHexString:function(_39d){
if(_39d.charAt(0)=="#"){
_39d=_39d.substring(1);
}
var _39e=[];
var i,hex;
if(_39d.length==3){
for(i=0;i<3;i++){
hex=_39d.substr(i,1);
_39e.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_39d.substr(i,2);
_39e.push(parseInt(hex,16)/255);
}
}
var _3a1=MochiKit.Color.Color;
return _3a1.fromRGB.apply(_3a1,_39e);
},_fromColorString:function(pre,_3a3,_3a4,_3a5){
if(_3a5.indexOf(pre)===0){
_3a5=_3a5.substring(_3a5.indexOf("(",3)+1,_3a5.length-1);
}
var _3a6=_3a5.split(/\s*,\s*/);
var _3a7=[];
for(var i=0;i<_3a6.length;i++){
var c=_3a6[i];
var val;
var _3ab=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_3ab=="deg"){
val=parseFloat(c)/360;
}else{
if(_3ab=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_3a4[i]*parseFloat(c);
}
}
}
_3a7.push(val);
}
return this[_3a3].apply(this,_3a7);
},fromComputedStyle:function(elem,_3ad){
var d=MochiKit.DOM;
var cls=MochiKit.Color.Color;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _3b0=MochiKit.Style.getStyle.apply(d,arguments);
if(!_3b0){
continue;
}
var _3b1=cls.fromString(_3b0);
if(!_3b1){
break;
}
if(_3b1.asRGB().a>0){
return _3b1;
}
}
return null;
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_3b7){
v*=_3b7;
if(v<0){
return 0;
}else{
if(v>_3b7){
return _3b7;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_3bd,_3be,_3bf){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_3bd=hsv.s;
_3be=hsv.v;
_3bf=hsv.a;
}
var red;
var _3c2;
var blue;
if(_3bd===0){
red=_3be;
_3c2=_3be;
blue=_3be;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_3be*(1-_3bd);
var q=_3be*(1-(_3bd*f));
var t=_3be*(1-(_3bd*(1-f)));
switch(i){
case 1:
red=q;
_3c2=_3be;
blue=p;
break;
case 2:
red=p;
_3c2=_3be;
blue=t;
break;
case 3:
red=p;
_3c2=q;
blue=_3be;
break;
case 4:
red=t;
_3c2=p;
blue=_3be;
break;
case 5:
red=_3be;
_3c2=p;
blue=q;
break;
case 6:
case 0:
red=_3be;
_3c2=t;
blue=p;
break;
}
}
return {r:red,g:_3c2,b:blue,a:_3bf};
},hslToRGB:function(hue,_3ca,_3cb,_3cc){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_3ca=hsl.s;
_3cb=hsl.l;
_3cc=hsl.a;
}
var red;
var _3cf;
var blue;
if(_3ca===0){
red=_3cb;
_3cf=_3cb;
blue=_3cb;
}else{
var m2;
if(_3cb<=0.5){
m2=_3cb*(1+_3ca);
}else{
m2=_3cb+_3ca-(_3cb*_3ca);
}
var m1=(2*_3cb)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_3cf=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_3cf,b:blue,a:_3cc};
},rgbToHSV:function(red,_3d6,blue,_3d8){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_3d6=rgb.g;
blue=rgb.b;
_3d8=rgb.a;
}
var max=Math.max(Math.max(red,_3d6),blue);
var min=Math.min(Math.min(red,_3d6),blue);
var hue;
var _3dd;
var _3de=max;
if(min==max){
hue=0;
_3dd=0;
}else{
var _3df=(max-min);
_3dd=_3df/max;
if(red==max){
hue=(_3d6-blue)/_3df;
}else{
if(_3d6==max){
hue=2+((blue-red)/_3df);
}else{
hue=4+((red-_3d6)/_3df);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_3dd,v:_3de,a:_3d8};
},rgbToHSL:function(red,_3e1,blue,_3e3){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_3e1=rgb.g;
blue=rgb.b;
_3e3=rgb.a;
}
var max=Math.max(red,Math.max(_3e1,blue));
var min=Math.min(red,Math.min(_3e1,blue));
var hue;
var _3e8;
var _3e9=(max+min)/2;
var _3ea=max-min;
if(_3ea===0){
hue=0;
_3e8=0;
}else{
if(_3e9<=0.5){
_3e8=_3ea/(max+min);
}else{
_3e8=_3ea/(2-max-min);
}
if(red==max){
hue=(_3e1-blue)/_3ea;
}else{
if(_3e1==max){
hue=2+((blue-red)/_3ea);
}else{
hue=4+((red-_3e1)/_3ea);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_3e8,l:_3e9,a:_3e3};
},toColorPart:function(num){
num=Math.round(num);
var _3ec=num.toString(16);
if(num<16){
return "0"+_3ec;
}
return _3ec;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _3ee=1/3;
var _3ef={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_3ee,_3ee,_3ee],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_3ee,2*_3ee,2*_3ee],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
var _3f0=function(name,r,g,b,a){
var rval=this.fromRGB(r,g,b,a);
this[name]=function(){
return rval;
};
return rval;
};
for(var k in _3ef){
var name=k+"Color";
var _3f9=m.concat([_3f0,this.Color,name],_3ef[k]);
this.Color[name]=m.bind.apply(null,_3f9);
}
var _3fa=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof Color)){
return false;
}
}
return true;
};
var _3fc=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_3fa,_3fc);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
}});
MochiKit.Color.EXPORT=["Color"];
MochiKit.Color.EXPORT_OK=["clampColorComponent","rgbToHSL","hslToRGB","rgbToHSV","hsvToRGB","toColorPart"];
MochiKit.Color.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Color);
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Signal");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
dojo.require("MochiKit.Style");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.Style",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Signal depends on MochiKit.Base!";
}
try{
if(typeof (MochiKit.DOM)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Signal depends on MochiKit.DOM!";
}
try{
if(typeof (MochiKit.Style)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Signal depends on MochiKit.Style!";
}
if(typeof (MochiKit.Signal)=="undefined"){
MochiKit.Signal={};
}
MochiKit.Signal.NAME="MochiKit.Signal";
MochiKit.Signal.VERSION="1.4";
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(src,e){
this._event=e||window.event;
this._src=src;
};
MochiKit.Base.update(MochiKit.Signal.Event.prototype,{__repr__:function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", src(): "+repr(this.src())+", type(): "+repr(this.type())+", target(): "+repr(this.target());
if(this.type()&&this.type().indexOf("key")===0||this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu"){
str+=", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
}
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}}";
}else{
str+="}";
}
}
if(this.type()=="mouseover"||this.type()=="mouseout"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
},toString:function(){
return this.__repr__();
},src:function(){
return this._src;
},event:function(){
return this._event;
},type:function(){
return this._event.type||undefined;
},target:function(){
return this._event.target||this._event.srcElement;
},_relatedTarget:null,relatedTarget:function(){
if(this._relatedTarget!==null){
return this._relatedTarget;
}
var elem=null;
if(this.type()=="mouseover"){
elem=(this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"){
elem=(this._event.relatedTarget||this._event.toElement);
}
}
if(elem!==null){
this._relatedTarget=elem;
return elem;
}
return undefined;
},_modifier:null,modifier:function(){
if(this._modifier!==null){
return this._modifier;
}
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
this._modifier=m;
return m;
},_key:null,key:function(){
if(this._key!==null){
return this._key;
}
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
this._key=k;
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
this._key=k;
return k;
}
}
}
return undefined;
},_mouse:null,mouse:function(){
if(this._mouse!==null){
return this._mouse;
}
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client=new MochiKit.Style.Coordinates(0,0);
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page=new MochiKit.Style.Coordinates(0,0);
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}
if(this.type()!="mousemove"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
this._mouse=m;
return m;
}
return undefined;
},stop:function(){
this.stopPropagation();
this.preventDefault();
},stopPropagation:function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
},preventDefault:function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
if(this._confirmUnload===null){
this._event.returnValue=false;
}
}
},_confirmUnload:null,confirmUnload:function(msg){
if(this.type()=="beforeunload"){
this._confirmUnload=msg;
this._event.returnValue=msg;
}
}});
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
(function(){
var _40b=MochiKit.Signal._specialMacKeys;
for(i=63236;i<=63242;i++){
_40b[i]="KEY_F"+(i-63236+1);
}
})();
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
(function(){
var _40c=MochiKit.Signal._specialKeys;
for(var i=48;i<=57;i++){
_40c[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
_40c[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
_40c[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
_40c[i]="KEY_F"+(i-112+1);
}
})();
MochiKit.Signal.Ident=function(_40e){
this.source=_40e.source;
this.signal=_40e.signal;
this.listener=_40e.listener;
this.isDOM=_40e.isDOM;
this.objOrFunc=_40e.objOrFunc;
this.funcOrStr=_40e.funcOrStr;
this.connected=_40e.connected;
};
MochiKit.Signal.Ident.prototype={};
MochiKit.Base.update(MochiKit.Signal,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},_unloadCache:function(){
var self=MochiKit.Signal;
var _410=self._observers;
for(var i=0;i<_410.length;i++){
if(_410[i].signal!=="onload"&&_410[i].signal!=="onunload"){
self._disconnect(_410[i]);
}
}
},_listener:function(src,sig,func,obj,_416){
var self=MochiKit.Signal;
var E=self.Event;
if(!_416){
return MochiKit.Base.bind(func,obj);
}
obj=obj||src;
if(typeof (func)=="string"){
if(sig==="onload"||sig==="onunload"){
return function(_419){
obj[func].apply(obj,[new E(src,_419)]);
var _41a=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:obj,funcOrStr:func});
MochiKit.Signal._disconnect(_41a);
};
}else{
return function(_41b){
obj[func].apply(obj,[new E(src,_41b)]);
};
}
}else{
if(sig==="onload"||sig==="onunload"){
return function(_41c){
func.apply(obj,[new E(src,_41c)]);
MochiKit.Signal.disconnect(src,sig,func);
var _41d=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:func});
MochiKit.Signal._disconnect(_41d);
};
}else{
return function(_41e){
func.apply(obj,[new E(src,_41e)]);
};
}
}
},_browserAlreadyHasMouseEnterAndLeave:function(){
return /MSIE/.test(navigator.userAgent);
},_mouseEnterListener:function(src,sig,func,obj){
var E=MochiKit.Signal.Event;
return function(_424){
var e=new E(src,_424);
try{
e.relatedTarget().nodeName;
}
catch(err){
return;
}
e.stop();
if(MochiKit.DOM.isChildNode(e.relatedTarget(),src)){
return;
}
e.type=function(){
return sig;
};
if(typeof (func)=="string"){
return obj[func].apply(obj,[e]);
}else{
return func.apply(obj,[e]);
}
};
},_getDestPair:function(_426,_427){
var obj=null;
var func=null;
if(typeof (_427)!="undefined"){
obj=_426;
func=_427;
if(typeof (_427)=="string"){
if(typeof (_426[_427])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_427)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_426)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_426;
}
}
return [obj,func];
},connect:function(src,sig,_42c,_42d){
src=MochiKit.DOM.getElement(src);
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var _42f=self._getDestPair(_42c,_42d);
var obj=_42f[0];
var func=_42f[1];
if(typeof (obj)=="undefined"||obj===null){
obj=src;
}
var _432=!!(src.addEventListener||src.attachEvent);
if(_432&&(sig==="onmouseenter"||sig==="onmouseleave")&&!self._browserAlreadyHasMouseEnterAndLeave()){
var _433=self._mouseEnterListener(src,sig.substr(2),func,obj);
if(sig==="onmouseenter"){
sig="onmouseover";
}else{
sig="onmouseout";
}
}else{
var _433=self._listener(src,sig,func,obj,_432);
}
if(src.addEventListener){
src.addEventListener(sig.substr(2),_433,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_433);
}
}
var _434=new MochiKit.Signal.Ident({source:src,signal:sig,listener:_433,isDOM:_432,objOrFunc:_42c,funcOrStr:_42d,connected:true});
self._observers.push(_434);
if(!_432&&typeof (src.__connect__)=="function"){
var args=MochiKit.Base.extend([_434],arguments,1);
src.__connect__.apply(src,args);
}
return _434;
},_disconnect:function(_436){
if(!_436.connected){
return;
}
_436.connected=false;
if(!_436.isDOM){
return;
}
var src=_436.source;
var sig=_436.signal;
var _439=_436.listener;
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_439,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_439);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_43a){
var self=MochiKit.Signal;
var _43c=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=MochiKit.DOM.getElement(arguments[0]);
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_43c.length-1;i>=0;i--){
var o=_43c[i];
if(o.source===src&&o.signal===sig&&o.objOrFunc===obj&&o.funcOrStr===func){
self._disconnect(o);
if(!self._lock){
_43c.splice(i,1);
}else{
self._dirty=true;
}
return true;
}
}
}else{
var idx=m.findIdentical(_43c,_43a);
if(idx>=0){
self._disconnect(_43a);
if(!self._lock){
_43c.splice(idx,1);
}else{
self._dirty=true;
}
return true;
}
}
return false;
},disconnectAllTo:function(_445,_446){
var self=MochiKit.Signal;
var _448=self._observers;
var _449=self._disconnect;
var _44a=self._lock;
var _44b=self._dirty;
if(typeof (_446)==="undefined"){
_446=null;
}
for(var i=_448.length-1;i>=0;i--){
var _44d=_448[i];
if(_44d.objOrFunc===_445&&(_446===null||_44d.funcOrStr===_446)){
_449(_44d);
if(_44a){
_44b=true;
}else{
_448.splice(i,1);
}
}
}
self._dirty=_44b;
},disconnectAll:function(src,sig){
src=MochiKit.DOM.getElement(src);
var m=MochiKit.Base;
var _451=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _453=self._disconnect;
var _454=self._observers;
var i,_456;
var _457=self._lock;
var _458=self._dirty;
if(_451.length===0){
for(i=_454.length-1;i>=0;i--){
_456=_454[i];
if(_456.source===src){
_453(_456);
if(!_457){
_454.splice(i,1);
}else{
_458=true;
}
}
}
}else{
var sigs={};
for(i=0;i<_451.length;i++){
sigs[_451[i]]=true;
}
for(i=_454.length-1;i>=0;i--){
_456=_454[i];
if(_456.source===src&&_456.signal in sigs){
_453(_456);
if(!_457){
_454.splice(i,1);
}else{
_458=true;
}
}
}
}
self._dirty=_458;
},signal:function(src,sig){
var self=MochiKit.Signal;
var _45d=self._observers;
src=MochiKit.DOM.getElement(src);
var args=MochiKit.Base.extend(null,arguments,2);
var _45f=[];
self._lock=true;
for(var i=0;i<_45d.length;i++){
var _461=_45d[i];
if(_461.source===src&&_461.signal===sig){
try{
_461.listener.apply(src,args);
}
catch(e){
_45f.push(e);
}
}
}
self._lock=false;
if(self._dirty){
self._dirty=false;
for(var i=_45d.length-1;i>=0;i--){
if(!_45d[i].connected){
_45d.splice(i,1);
}
}
}
if(_45f.length==1){
throw _45f[0];
}else{
if(_45f.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_45f;
throw e;
}
}
}});
MochiKit.Signal.EXPORT_OK=[];
MochiKit.Signal.EXPORT=["connect","disconnect","signal","disconnectAll","disconnectAllTo"];
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
this._lock=false;
this._dirty=false;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
if(MochiKit.__export__){
connect=MochiKit.Signal.connect;
disconnect=MochiKit.Signal.disconnect;
disconnectAll=MochiKit.Signal.disconnectAll;
signal=MochiKit.Signal.signal;
}
MochiKit.Base._exportSymbols(this,MochiKit.Signal);


/***

    PlotKit.PlotKit 0.9.1 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    For more information, <http://www.liquidx.net/plotkit/>.
    
    Copyright (c) 2006. Alastair Tse.

***/

try{
if(typeof (MochiKit.Base)=="undefined"||typeof (MochiKit.DOM)=="undefined"||typeof (MochiKit.Color)=="undefined"||typeof (MochiKit.Format)=="undefined"){
throw "";
}
}
catch(e){
throw "PlotKit depends on MochiKit.{Base,Color,DOM,Format}";
}
MochiKit.Base.update(MochiKit.Color.Color.prototype,{asFillColor:function(){
return this.lighterColorWithLevel(0.3);
},asStrokeColor:function(){
return this.darkerColorWithLevel(0.1);
},asPointColor:function(){
return this.lighterColorWithLevel(0.1);
}});
if(typeof (PlotKit)=="undefined"){
PlotKit={};
}
PlotKit.NAME="PlotKit";
PlotKit.VERSION="0.8";
PlotKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
PlotKit.toString=function(){
return this.__repr__();
};
if(typeof (PlotKit.Base)=="undefined"){
PlotKit.Base={};
}
PlotKit.Base.NAME="PlotKit.Base";
PlotKit.Base.VERSION=PlotKit.VERSION;
PlotKit.Base.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
PlotKit.Base.toString=function(){
return this.__repr__();
};
PlotKit.Base.usingPrototype=function(){
try{
return (typeof (Object.extend)=="function");
}
catch(e){
return false;
}
};
MochiKit.Base.update(PlotKit.Base,{roundInterval:function(_1,_2,_3){
var _4=MochiKit.Format.roundToFixed;
var _5=_1/_2;
return parseFloat(_4(_5,_3));
},collapse:function(_6){
var m=MochiKit.Base;
var _8=new Array();
for(var i=0;i<_6.length;i++){
_8=m.concat(_8,_6[i]);
}
if(PlotKit.Base.usingPrototype()){
delete _8.extend;
delete _8.from;
delete _8.inspect;
}
return _8;
},uniq:function(_10){
var m=MochiKit.Base;
if(!m.isArrayLike(_10)||(_10.length<1)){
return new Array();
}
var _11=new Array();
var _12=_10[0];
_11.push(_10[0]);
for(var i=1;i<_10.length;i++){
if(m.compare(_10[i],_12)!=0){
_12=_10[i];
_11.push(_10[i]);
}
}
return _11;
},palette:function(_13,_14,_15,_16){
var _17=MochiKit.Base.isUndefinedOrNull;
var _18=new Array();
if(_17(_16)){
_16=0.1;
}
if(_17(_15)){
_15=0.4;
}
if(_17(_14)){
_14=-0.2;
}
var _19=_14;
while(_19<=_15){
_18.push(_19);
_19+=_16;
}
var _20=function(_21,_22){
return _21.lighterColorWithLevel(_22);
};
return MochiKit.Base.map(partial(_20,_13),_18);
},excanvasSupported:function(){
if(/MSIE/.test(navigator.userAgent)&&!window.opera){
return true;
}
return false;
},findPosX:function(obj){
var _24=0;
if(obj.offsetParent){
while(obj.offsetParent){
_24+=obj.offsetLeft;
obj=obj.offsetParent;
}
}else{
if(obj.x){
_24+=obj.x;
}
}
return _24;
},findPosY:function(obj){
var _25=0;
if(obj.offsetParent){
while(obj.offsetParent){
_25+=obj.offsetTop;
obj=obj.offsetParent;
}
}else{
if(obj.y){
_25+=obj.y;
}
}
return _25;
},isFuncLike:function(obj){
return (typeof (obj)=="function");
}});
PlotKit.Base.map=function(fn,lst){
if(PlotKit.Base.usingPrototype()){
var _28=[];
for(var x in lst){
if(typeof (lst[x])=="function"){
continue;
}
_28.push(fn(lst[x]));
}
return _28;
}else{
return MochiKit.Base.map(fn,lst);
}
};
PlotKit.Base.items=function(lst){
if(PlotKit.Base.usingPrototype()){
var _30=[];
for(var x in lst){
if(typeof (lst[x])=="function"){
continue;
}
_30.push([x,lst[x]]);
}
return _30;
}else{
return MochiKit.Base.items(lst);
}
};
PlotKit.Base.keys=function(lst){
if(PlotKit.Base.usingPrototype()){
var _31=[];
for(var x in lst){
if(typeof (lst[x])=="function"){
continue;
}
_31.push(x);
}
return _31;
}else{
return MochiKit.Base.keys(lst);
}
};
PlotKit.Base.baseColors=function(){
var _32=MochiKit.Color.Color.fromHexString;
return [_32("#476fb2"),_32("#be2c2b"),_32("#85b730"),_32("#734a99"),_32("#26a1c5"),_32("#fb8707"),_32("#000000")];
};
PlotKit.Base.EXPORT=["baseColors","collapse","findPosX","findPosY","roundInterval","uniq","isFuncLike","excanvasSupported"];
PlotKit.Base.EXPORT_OK=[];
PlotKit.Base.__new__=function(){
var m=MochiKit.Base;
m.nameFunctions(this);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
};
PlotKit.Base.__new__();
MochiKit.Base._exportSymbols(this,PlotKit.Base);
try{
if(typeof (PlotKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "PlotKit.Layout depends on MochiKit.{Base,Color,DOM,Format} and PlotKit.Base";
}
if(typeof (PlotKit.Layout)=="undefined"){
PlotKit.Layout={};
}
PlotKit.Layout.NAME="PlotKit.Layout";
PlotKit.Layout.VERSION=PlotKit.VERSION;
PlotKit.Layout.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
PlotKit.Layout.toString=function(){
return this.__repr__();
};
PlotKit.Layout.valid_styles=["bar","line","pie","point"];
PlotKit.Layout=function(_33,_34){
this.options={"barWidthFillFraction":0.75,"barOrientation":"vertical","xOriginIsZero":true,"yOriginIsZero":true,"xAxis":null,"yAxis":null,"xTicks":null,"yTicks":null,"xNumberOfTicks":10,"yNumberOfTicks":5,"xTickPrecision":1,"yTickPrecision":1,"pieRadius":0.4};
this.style=_33;
MochiKit.Base.update(this.options,_34?_34:{});
if(!MochiKit.Base.isUndefinedOrNull(this.options.xAxis)){
this.minxval=this.options.xAxis[0];
this.maxxval=this.options.xAxis[1];
this.xscale=this.maxxval-this.minxval;
}else{
this.minxval=0;
this.maxxval=null;
this.xscale=null;
}
if(!MochiKit.Base.isUndefinedOrNull(this.options.yAxis)){
this.minyval=this.options.yAxis[0];
this.maxyval=this.options.yAxis[1];
this.yscale=this.maxyval-this.minyval;
}else{
this.minyval=0;
this.maxyval=null;
this.yscale=null;
}
this.bars=new Array();
this.points=new Array();
this.slices=new Array();
this.xticks=new Array();
this.yticks=new Array();
this.datasets=new Array();
this.minxdelta=0;
this.xrange=1;
this.yrange=1;
this.hitTestCache={x2maxy:null};
};
PlotKit.Layout.prototype.addDataset=function(_35,_36){
this.datasets[_35]=_36;
};
PlotKit.Layout.prototype.removeDataset=function(_37,_38){
delete this.datasets[_37];
};
PlotKit.Layout.prototype.addDatasetFromTable=function(_39,_40,_41,_42,_43){
var _44=MochiKit.Base.isUndefinedOrNull;
var _45=MochiKit.DOM.scrapeText;
var _46=MochiKit.Format.strip;
if(_44(_41)){
_41=0;
}
if(_44(_42)){
_42=1;
}
if(_44(_43)){
_43=-1;
}
var _47=_40.tBodies[0].rows;
var _48=new Array();
var _49=new Array();
if(!_44(_47)){
for(var i=0;i<_47.length;i++){
_48.push([parseFloat(_46(_45(_47[i].cells[_41]))),parseFloat(_46(_45(_47[i].cells[_42])))]);
if(_43>=0){
_49.push({v:parseFloat(_46(_45(_47[i].cells[_41]))),label:_46(_45(_47[i].cells[_43]))});
}
}
this.addDataset(_39,_48);
if(_43>=0){
this.options.xTicks=_49;
}
return true;
}
return false;
};
PlotKit.Layout.prototype.evaluate=function(){
this._evaluateLimits();
this._evaluateScales();
if(this.style=="line"){
this._evaluateLineCharts();
this._evaluateLineTicks();
}
};
PlotKit.Layout.prototype._evaluateLimits=function(){
var map=PlotKit.Base.map;
var _51=PlotKit.Base.items;
var _52=MochiKit.Base.itemgetter;
var _53=PlotKit.Base.collapse;
var _54=MochiKit.Base.listMin;
var _55=MochiKit.Base.listMax;
var _56=MochiKit.Base.isUndefinedOrNull;
var all=_53(map(_52(1),_51(this.datasets)));
if(_56(this.options.xAxis)){
if(this.options.xOriginIsZero){
this.minxval=0;
}else{
this.minxval=_54(map(parseFloat,map(_52(0),all)));
}
this.maxxval=_55(map(parseFloat,map(_52(0),all)));
}else{
this.minxval=this.options.xAxis[0];
this.maxxval=this.options.xAxis[1];
this.xscale=this.maxval-this.minxval;
}
if(_56(this.options.yAxis)){
if(this.options.yOriginIsZero){
this.minyval=0;
}else{
this.minyval=_54(map(parseFloat,map(_52(1),all)));
}
this.maxyval=_55(map(parseFloat,map(_52(1),all)));
}else{
this.minyval=this.options.yAxis[0];
this.maxyval=this.options.yAxis[1];
this.yscale=this.maxyval-this.minyval;
}
};
PlotKit.Layout.prototype._evaluateScales=function(){
var _58=MochiKit.Base.isUndefinedOrNull;
this.xrange=this.maxxval-this.minxval;
if(this.xrange==0){
this.xscale=1;
}else{
this.xscale=1/this.xrange;
}
this.yrange=this.maxyval-this.minyval;
if(this.yrange==0){
this.yscale=1;
}else{
this.yscale=1/this.yrange;
}
};
PlotKit.Layout.prototype._uniqueXValues=function(){
var _59=PlotKit.Base.collapse;
var map=PlotKit.Base.map;
var _60=PlotKit.Base.uniq;
var _61=MochiKit.Base.itemgetter;
var _62=PlotKit.Base.items;
var _63=map(parseFloat,map(_61(0),_59(map(_61(1),_62(this.datasets)))));
_63.sort(MochiKit.Base.compare);
return _60(_63);
};
PlotKit.Layout.prototype._evaluateLineCharts=function(){
var _64=PlotKit.Base.items;
var _65=_64(this.datasets).length;
this.points=new Array();
var i=0;
for(var _66 in this.datasets){
var _67=this.datasets[_66];
if(PlotKit.Base.isFuncLike(_67)){
continue;
}
_67.sort(function(a,b){
return compare(parseFloat(a[0]),parseFloat(b[0]));
});
for(var j=0;j<_67.length;j++){
var _71=_67[j];
var _72={x:((parseFloat(_71[0])-this.minxval)*this.xscale),y:1-((parseFloat(_71[1])-this.minyval)*this.yscale),xval:parseFloat(_71[0]),yval:parseFloat(_71[1]),name:_66};
if(_72.y<=0){
_72.y=0;
}
if(_72.y>=1){
_72.y=1;
}
if((_72.x>=0)&&(_72.x<=1)){
this.points.push(_72);
}
}
i++;
}
};
PlotKit.Layout.prototype._evaluateLineTicksForXAxis=function(){
var _73=MochiKit.Base.isUndefinedOrNull;
if(this.options.xTicks){
this.xticks=new Array();
var _74=function(_75){
var _76=_75.label;
if(_73(_76)){
_76=_75.v.toString();
}
var pos=this.xscale*(_75.v-this.minxval);
if((pos>=0)&&(pos<=1)){
this.xticks.push([pos,_76]);
}
};
MochiKit.Iter.forEach(this.options.xTicks,bind(_74,this));
}else{
if(this.options.xNumberOfTicks){
var _78=this._uniqueXValues();
var _79=this.xrange/this.options.xNumberOfTicks;
var _80=0;
this.xticks=new Array();
for(var i=0;i<=_78.length;i++){
if((_78[i]-this.minxval)>=(_80*_79)){
var pos=this.xscale*(_78[i]-this.minxval);
if((pos>1)||(pos<0)){
continue;
}
this.xticks.push([pos,_78[i]]);
_80++;
}
if(_80>this.options.xNumberOfTicks){
break;
}
}
}
}
};
PlotKit.Layout.prototype._evaluateLineTicksForYAxis=function(){
var _81=MochiKit.Base.isUndefinedOrNull;
if(this.options.yTicks){
this.yticks=new Array();
var _82=function(_83){
var _84=_83.label;
if(_81(_84)){
_84=_83.v.toString();
}
var pos=1-(this.yscale*(_83.v-this.minyval));
if((pos>=0)&&(pos<=1)){
this.yticks.push([pos,_84]);
}
};
MochiKit.Iter.forEach(this.options.yTicks,bind(_82,this));
}else{
if(this.options.yNumberOfTicks){
this.yticks=new Array();
var _85=PlotKit.Base.roundInterval;
var _86=this.options.yTickPrecision;
var _87=_85(this.yrange,this.options.yNumberOfTicks,_86);
for(var i=0;i<=this.options.yNumberOfTicks;i++){
var _88=this.minyval+(i*_87);
var pos=1-((_88-this.minyval)*this.yscale);
if((pos>1)||(pos<0)){
continue;
}
this.yticks.push([pos,MochiKit.Format.roundToFixed(_88,_86)]);
}
}
}
};
PlotKit.Layout.prototype._evaluateLineTicks=function(){
this._evaluateLineTicksForXAxis();
this._evaluateLineTicksForYAxis();
};
PlotKit.LayoutModule={};
PlotKit.LayoutModule.Layout=PlotKit.Layout;
PlotKit.LayoutModule.EXPORT=["Layout"];
PlotKit.LayoutModule.EXPORT_OK=[];
PlotKit.LayoutModule.__new__=function(){
var m=MochiKit.Base;
m.nameFunctions(this);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
};
PlotKit.LayoutModule.__new__();
MochiKit.Base._exportSymbols(this,PlotKit.LayoutModule);
try{
if((typeof (PlotKit.Base)=="undefined")||(typeof (PlotKit.Layout)=="undefined")){
throw "";
}
}
catch(e){
throw "PlotKit.Layout depends on MochiKit.{Base,Color,DOM,Format} and PlotKit.{Base,Layout}";
}
if(typeof (PlotKit.CanvasRenderer)=="undefined"){
PlotKit.CanvasRenderer={};
}
PlotKit.CanvasRenderer.NAME="PlotKit.CanvasRenderer";
PlotKit.CanvasRenderer.VERSION=PlotKit.VERSION;
PlotKit.CanvasRenderer.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
PlotKit.CanvasRenderer.toString=function(){
return this.__repr__();
};
PlotKit.CanvasRenderer=function(_89,_90,_91){
if(arguments.length>0){
this.__init__(_89,_90,_91);
}
};
PlotKit.CanvasRenderer.prototype.__init__=function(_92,_93,_94){
var _95=MochiKit.Base.isUndefinedOrNull;
var _96=MochiKit.Color.Color;
this.options={"drawBackground":true,"backgroundColor":_96.whiteColor(),"padding":{left:30,right:30,top:5,bottom:10},"colorScheme":PlotKit.Base.palette(PlotKit.Base.baseColors()[0]),"strokeColor":_96.whiteColor(),"strokeColorTransform":"asStrokeColor","strokeWidth":0.5,"shouldFill":true,"shouldStroke":true,"drawXAxis":true,"drawYAxis":true,"axisLineColor":_96.blackColor(),"axisLineWidth":0.5,"axisTickSize":3,"axisLabelColor":_96.blackColor(),"axisLabelFont":"Arial","axisLabelFontSize":9,"axisLabelWidth":50,"pieRadius":0.4,"enableEvents":true};
MochiKit.Base.update(this.options,_94?_94:{});
this.layout=_93;
this.element=MochiKit.DOM.getElement(_92);
this.container=this.element.parentNode;
this.isIE=PlotKit.Base.excanvasSupported();
if(this.isIE&&!_95(G_vmlCanvasManager)){
this.IEDelay=0.5;
this.maxTries=5;
this.renderDelay=null;
this.clearDelay=null;
this.element=G_vmlCanvasManager.initElement(this.element);
}
this.height=this.element.height;
this.width=this.element.width;
if(_95(this.element)){
throw "CanvasRenderer() - passed canvas is not found";
}
if(!this.isIE&&!(PlotKit.CanvasRenderer.isSupported(this.element))){
throw "CanvasRenderer() - Canvas is not supported.";
}
if(_95(this.container)||(this.container.nodeName.toLowerCase()!="div")){
throw "CanvasRenderer() - <canvas> needs to be enclosed in <div>";
}
this.xlabels=new Array();
this.ylabels=new Array();
this.isFirstRender=true;
this.area={x:this.options.padding.left,y:this.options.padding.top,w:this.width-this.options.padding.left-this.options.padding.right,h:this.height-this.options.padding.top-this.options.padding.bottom};
MochiKit.DOM.updateNodeAttributes(this.container,{"style":{"position":"relative","width":this.width+"px"}});
};
PlotKit.CanvasRenderer.prototype.render=function(){
if(this.isIE){
try{
if(this.renderDelay){
this.renderDelay.cancel();
this.renderDelay=null;
}
var _97=this.element.getContext("2d");
}
catch(e){
this.isFirstRender=false;
if(this.maxTries-->0){
this.renderDelay=MochiKit.Async.wait(this.IEDelay);
this.renderDelay.addCallback(bind(this.render,this));
}
return;
}
}
if(this.options.drawBackground){
this._renderBackground();
}
if(this.layout.style=="line"){
this._renderLineChart();
this._renderLineAxis();
}
};
PlotKit.CanvasRenderer.prototype._renderLineChart=function(){
var _98=this.element.getContext("2d");
var _99=this.options.colorScheme.length;
var _100=this.options.colorScheme;
var _101=MochiKit.Base.keys(this.layout.datasets);
var _102=_101.length;
var bind=MochiKit.Base.bind;
var _104=MochiKit.Base.partial;
for(var i=0;i<_102;i++){
var _105=_101[i];
var _106=_100[i%_99];
var _107=this.options.strokeColorTransform;
_98.save();
_98.fillStyle=_106.toRGBString();
if(this.options.strokeColor){
_98.strokeStyle=this.options.strokeColor.toRGBString();
}else{
if(this.options.strokeColorTransform){
_98.strokeStyle=_106[_107]().toRGBString();
}
}
_98.lineWidth=this.options.strokeWidth;
var _108=function(ctx){
ctx.beginPath();
ctx.moveTo(this.area.x,this.area.y+this.area.h);
var _110=function(ctx_,_112){
if(_112.name==_105){
ctx_.lineTo(this.area.w*_112.x+this.area.x,this.area.h*_112.y+this.area.y);
}
};
MochiKit.Iter.forEach(this.layout.points,_104(_110,ctx),this);
ctx.lineTo(this.area.w+this.area.x,this.area.h+this.area.y);
ctx.lineTo(this.area.x,this.area.y+this.area.h);
ctx.closePath();
};
if(this.options.shouldFill){
bind(_108,this)(_98);
_98.fill();
}
if(this.options.shouldStroke){
bind(_108,this)(_98);
_98.stroke();
}
_98.restore();
}
};
PlotKit.CanvasRenderer.prototype._renderLineAxis=function(){
this._renderAxis();
};
PlotKit.CanvasRenderer.prototype._renderAxis=function(){
if(!this.options.drawXAxis&&!this.options.drawYAxis){
return;
}
var _113=this.element.getContext("2d");
var _114={"style":{"position":"absolute","fontSize":this.options.axisLabelFontSize+"px","zIndex":10,"color":this.options.axisLabelColor.toRGBString(),"width":this.options.axisLabelWidth+"px","overflow":"hidden"}};
_113.save();
_113.strokeStyle=this.options.axisLineColor.toRGBString();
_113.lineWidth=this.options.axisLineWidth;
if(this.options.drawYAxis){
if(this.layout.yticks){
var _115=function(tick){
if(typeof (tick)=="function"){
return;
}
var x=this.area.x;
var y=this.area.y+tick[0]*this.area.h;
_113.beginPath();
_113.moveTo(x,y);
_113.lineTo(x-this.options.axisTickSize,y);
_113.closePath();
_113.stroke();
var _118=DIV(_114,tick[1]);
_118.style.top=(y-this.options.axisLabelFontSize)+"px";
_118.style.left=(x-this.options.padding.left-this.options.axisTickSize)+"px";
_118.style.textAlign="right";
_118.style.width=(this.options.padding.left-this.options.axisTickSize*2)+"px";
MochiKit.DOM.appendChildNodes(this.container,_118);
this.ylabels.push(_118);
};
MochiKit.Iter.forEach(this.layout.yticks,bind(_115,this));
}
_113.beginPath();
_113.moveTo(this.area.x,this.area.y);
_113.lineTo(this.area.x,this.area.y+this.area.h);
_113.closePath();
_113.stroke();
}
if(this.options.drawXAxis){
if(this.layout.xticks){
var _115=function(tick){
if(typeof (dataset)=="function"){
return;
}
var x=this.area.x+tick[0]*this.area.w;
var y=this.area.y+this.area.h;
_113.beginPath();
_113.moveTo(x,y);
_113.lineTo(x,y+this.options.axisTickSize);
_113.closePath();
_113.stroke();
var _119=DIV(_114,tick[1]);
_119.style.top=(y+this.options.axisTickSize)+"px";
_119.style.left=(x-this.options.axisLabelWidth/2)+"px";
_119.style.textAlign="center";
_119.style.width=this.options.axisLabelWidth+"px";
MochiKit.DOM.appendChildNodes(this.container,_119);
this.xlabels.push(_119);
};
MochiKit.Iter.forEach(this.layout.xticks,bind(_115,this));
}
_113.beginPath();
_113.moveTo(this.area.x,this.area.y+this.area.h);
_113.lineTo(this.area.x+this.area.w,this.area.y+this.area.h);
_113.closePath();
_113.stroke();
}
_113.restore();
};
PlotKit.CanvasRenderer.prototype._renderBackground=function(){
var _120=this.element.getContext("2d");
_120.save();
_120.fillStyle=this.options.backgroundColor.toRGBString();
_120.fillRect(0,0,this.width,this.height);
_120.restore();
};
PlotKit.CanvasRenderer.prototype.clear=function(){
if(this.isIE){
try{
if(this.clearDelay){
this.clearDelay.cancel();
this.clearDelay=null;
}
var _121=this.element.getContext("2d");
}
catch(e){
this.isFirstRender=false;
this.clearDelay=MochiKit.Async.wait(this.IEDelay);
this.clearDelay.addCallback(bind(this.clear,this));
return;
}
}
var _121=this.element.getContext("2d");
_121.clearRect(0,0,this.width,this.height);
MochiKit.Iter.forEach(this.xlabels,MochiKit.DOM.removeElement);
MochiKit.Iter.forEach(this.ylabels,MochiKit.DOM.removeElement);
this.xlabels=new Array();
this.ylabels=new Array();
};
PlotKit.CanvasRenderer.prototype._initialiseEvents=function(){
var _122=MochiKit.Signal.connect;
var bind=MochiKit.Base.bind;
_122(this.element,"onclick",bind(this.onclick,this));
};
PlotKit.CanvasRenderer.prototype._resolveObject=function(e){
var x=(e.mouse().page.x-PlotKit.Base.findPosX(this.element)-this.area.x)/this.area.w;
var y=(e.mouse().page.y-PlotKit.Base.findPosY(this.element)-this.area.y)/this.area.h;
var _124=this.layout.hitTest(x,y);
if(_124){
return _124;
}
return null;
};
PlotKit.CanvasRenderer.prototype._createEventObject=function(_125,e){
if(_125==null){
return null;
}
e.chart=_125;
return e;
};
PlotKit.CanvasRenderer.prototype.onclick=function(e){
var _126=this._resolveObject(e);
var _127=this._createEventObject(_126,e);
if(_127!=null){
MochiKit.Signal.signal(this,"onclick",_127);
}
};
PlotKit.CanvasRenderer.prototype.onmouseover=function(e){
var _128=this._resolveObject(e);
var _129=this._createEventObject(_128,e);
if(_129!=null){
signal(this,"onmouseover",_129);
}
};
PlotKit.CanvasRenderer.prototype.onmouseout=function(e){
var _130=this._resolveObject(e);
var _131=this._createEventObject(_130,e);
if(_131==null){
signal(this,"onmouseout",e);
}else{
signal(this,"onmouseout",_131);
}
};
PlotKit.CanvasRenderer.prototype.onmousemove=function(e){
var _132=this._resolveObject(e);
var _133=this._createEventObject(_132,e);
if((_132==null)&&(this.event_isinside==null)){
return;
}
if((_132!=null)&&(this.event_isinside==null)){
signal(this,"onmouseover",_133);
}
if((_132==null)&&(this.event_isinside!=null)){
signal(this,"onmouseout",_133);
}
if((_132!=null)&&(this.event_isinside!=null)){
signal(this,"onmousemove",_133);
}
this.event_isinside=_132;
};
PlotKit.CanvasRenderer.isSupported=function(_134){
var _135=null;
try{
if(MochiKit.Base.isUndefinedOrNull(_134)){
_135=MochiKit.DOM.CANVAS({});
}else{
_135=MochiKit.DOM.getElement(_134);
}
var _136=_135.getContext("2d");
}
catch(e){
var ie=navigator.appVersion.match(/MSIE (\d\.\d)/);
var _138=(navigator.userAgent.toLowerCase().indexOf("opera")!=-1);
if((!ie)||(ie[1]<6)||(_138)){
return false;
}
return true;
}
return true;
};
PlotKit.Canvas={};
PlotKit.Canvas.CanvasRenderer=PlotKit.CanvasRenderer;
PlotKit.Canvas.EXPORT=["CanvasRenderer"];
PlotKit.Canvas.EXPORT_OK=["CanvasRenderer"];
PlotKit.Canvas.__new__=function(){
var m=MochiKit.Base;
m.nameFunctions(this);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
};
PlotKit.Canvas.__new__();
MochiKit.Base._exportSymbols(this,PlotKit.Canvas);


DateGraphLayout=function(_1){
PlotKit.Layout.call(this,"line",_1);
};
DateGraphLayout.prototype=new PlotKit.Layout();
DateGraphLayout.prototype.evaluateWithError=function(){
this.evaluate();
if(!this.options.errorBars){
return;
}
var i=0;
for(var _3 in this.datasets){
var j=0;
var _5=this.datasets[_3];
if(PlotKit.Base.isFuncLike(_5)){
continue;
}
for(var j=0;j<_5.length;j++,i++){
var _6=_5[j];
var xv=parseFloat(_6[0]);
var yv=parseFloat(_6[1]);
if(xv==this.points[i].xval&&yv==this.points[i].yval){
this.points[i].errorMinus=parseFloat(_6[2]);
this.points[i].errorPlus=parseFloat(_6[3]);
}
}
}
};
DateGraphLayout.prototype.removeAllDatasets=function(){
delete this.datasets;
this.datasets=new Array();
};
DateGraphLayout.prototype.updateOptions=function(_9){
MochiKit.Base.update(this.options,_9?_9:{});
};
DateGraphCanvasRenderer=function(_10,_11,_12){
PlotKit.CanvasRenderer.call(this,_10,_11,_12);
this.options.shouldFill=false;
this.options.shouldStroke=true;
this.options.drawYGrid=true;
this.options.drawXGrid=true;
this.options.gridLineColor=MochiKit.Color.Color.grayColor();
MochiKit.Base.update(this.options,_12);
this.options.drawBackground=false;
};
DateGraphCanvasRenderer.prototype=new PlotKit.CanvasRenderer();
DateGraphCanvasRenderer.prototype.render=function(){
this._renderLineChart();
this._renderLineAxis();
var ctx=this.element.getContext("2d");
if(this.options.drawYGrid){
var _14=this.layout.yticks;
ctx.save();
ctx.strokeStyle=this.options.gridLineColor.toRGBString();
ctx.lineWidth=this.options.axisLineWidth;
for(var i=0;i<_14.length;i++){
var x=this.area.x;
var y=this.area.y+_14[i][0]*this.area.h;
ctx.beginPath();
ctx.moveTo(x,y);
ctx.lineTo(x+this.area.w,y);
ctx.closePath();
ctx.stroke();
}
}
if(this.options.drawXGrid){
var _14=this.layout.xticks;
ctx.save();
ctx.strokeStyle=this.options.gridLineColor.toRGBString();
ctx.lineWidth=this.options.axisLineWidth;
for(var i=0;i<_14.length;i++){
var x=this.area.x+_14[i][0]*this.area.w;
var y=this.area.y+this.area.h;
ctx.beginPath();
ctx.moveTo(x,y);
ctx.lineTo(x,this.area.y);
ctx.closePath();
ctx.stroke();
}
}
};
DateGraphCanvasRenderer.prototype._renderLineChart=function(){
var _17=this.element.getContext("2d");
var _18=this.options.colorScheme.length;
var _19=this.options.colorScheme;
var _20=MochiKit.Base.keys(this.layout.datasets);
var _21=this.layout.options.errorBars;
var _22=_20.length;
var _23=MochiKit.Base.bind;
var _24=MochiKit.Base.partial;
var _25=function(_26){
_26.canvasx=this.area.w*_26.x+this.area.x;
_26.canvasy=this.area.h*_26.y+this.area.y;
};
MochiKit.Iter.forEach(this.layout.points,_25,this);
var _27=function(ctx){
for(var i=0;i<_22;i++){
var _28=_20[i];
var _29=_19[i%_18];
var _30=this.options.strokeColorTransform;
_17.save();
_17.strokeStyle=_29.toRGBString();
_17.lineWidth=this.options.strokeWidth;
ctx.beginPath();
var _31=this.layout.points[0];
var _32=true;
var _33=function(_34,_31){
if(_31.name==_28){
if(_32){
_34.moveTo(_31.canvasx,_31.canvasy);
}else{
_34.lineTo(_31.canvasx,_31.canvasy);
}
_32=false;
}
};
MochiKit.Iter.forEach(this.layout.points,_24(_33,ctx),this);
ctx.stroke();
}
};
var _35=function(ctx){
for(var i=0;i<_22;i++){
var _36=_20[i];
var _37=_19[i%_18];
var _38=this.options.strokeColorTransform;
_17.save();
_17.strokeStyle=_37.toRGBString();
_17.lineWidth=this.options.strokeWidth;
var _39=-1;
var _40=[-1,-1];
var _41=0;
var _42=this.layout.yscale;
var _43=function(_44,_45){
_41++;
if(_45.name==_36){
var _46=[_45.y-_45.errorPlus*_42,_45.y+_45.errorMinus*_42];
_46[0]=this.area.h*_46[0]+this.area.y;
_46[1]=this.area.h*_46[1]+this.area.y;
if(_39>=0){
_44.moveTo(_39,_40[0]);
_44.lineTo(_45.canvasx,_46[0]);
_44.lineTo(_45.canvasx,_46[1]);
_44.lineTo(_39,_40[1]);
_44.closePath();
}
_40[0]=_46[0];
_40[1]=_46[1];
_39=_45.canvasx;
}
};
var _47=_37.colorWithAlpha(0.15);
ctx.fillStyle=_47.toRGBString();
ctx.beginPath();
MochiKit.Iter.forEach(this.layout.points,_24(_43,ctx),this);
ctx.fill();
}
};
if(_21){
_23(_35,this)(_17);
}
_23(_27,this)(_17);
_17.restore();
};
DateGraph=function(div,_49,_50,_51){
if(arguments.length>0){
this.__init__(div,_49,_50,_51);
}
};
DateGraph.NAME="DateGraph";
DateGraph.VERSION="1.1";
DateGraph.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
DateGraph.toString=function(){
return this.__repr__();
};
DateGraph.DEFAULT_ROLL_PERIOD=1;
DateGraph.DEFAULT_WIDTH=480;
DateGraph.DEFAULT_HEIGHT=320;
DateGraph.DEFAULT_STROKE_WIDTH=1;
DateGraph.AXIS_LINE_WIDTH=0.3;
DateGraph.prototype.__init__=function(div,_52,_53,_54){
this.maindiv_=div;
this.labels_=_53;
this.file_=_52;
this.rollPeriod_=_54.rollPeriod||DateGraph.DEFAULT_ROLL_PERIOD;
this.previousVerticalX_=-1;
this.width_=parseInt(div.style.width,10);
this.height_=parseInt(div.style.height,10);
this.errorBars_=_54.errorBars||false;
this.fractions_=_54.fractions||false;
this.strokeWidth_=_54.strokeWidth||DateGraph.DEFAULT_STROKE_WIDTH;
this.dateWindow_=_54.dateWindow||null;
this.valueRange_=_54.valueRange||null;
this.labelsSeparateLines=_54.labelsSeparateLines||false;
this.labelsDiv_=_54.labelsDiv||null;
this.labelsKMB_=_54.labelsKMB||false;
this.minTickSize_=_54.minTickSize||0;
this.xValueParser_=_54.xValueParser||DateGraph.prototype.dateParser;
this.xValueFormatter_=_54.xValueFormatter||DateGraph.prototype.dateString_;
this.xTicker_=_54.xTicker||DateGraph.prototype.dateTicker;
this.sigma_=_54.sigma||2;
this.wilsonInterval_=_54.wilsonInterval||true;
this.customBars_=_54.customBars||false;
this.attrs_=_54;
this.labelsFromCSV_=(this.labels_==null);
if(this.labels_==null){
this.labels_=[];
}
this.clickCallback_=_54.clickCallback||null;
this.zoomCallback_=_54.zoomCallback||null;
this.createInterface_();
this.layoutOptions_={"errorBars":(this.errorBars_||this.customBars_),"xOriginIsZero":false};
MochiKit.Base.update(this.layoutOptions_,_54);
this.setColors_(_54);
this.layout_=new DateGraphLayout(this.layoutOptions_);
this.renderOptions_={colorScheme:this.colors_,strokeColor:null,strokeWidth:this.strokeWidth_,axisLabelFontSize:14,axisLineWidth:DateGraph.AXIS_LINE_WIDTH};
MochiKit.Base.update(this.renderOptions_,_54);
this.plotter_=new DateGraphCanvasRenderer(this.hidden_,this.layout_,this.renderOptions_);
this.createStatusMessage_();
this.createRollInterface_();
this.createDragInterface_();
connect(window,"onload",this,function(e){
this.start_();
});
};
DateGraph.prototype.rollPeriod=function(){
return this.rollPeriod_;
};
DateGraph.prototype.createInterface_=function(){
var _56=this.maindiv_;
this.graphDiv=MochiKit.DOM.DIV({style:{"width":this.width_+"px","height":this.height_+"px"}});
appendChildNodes(_56,this.graphDiv);
var _57=MochiKit.DOM.CANVAS;
this.canvas_=_57({style:{"position":"absolute"},width:this.width_,height:this.height_});
appendChildNodes(this.graphDiv,this.canvas_);
this.hidden_=this.createPlotKitCanvas_(this.canvas_);
connect(this.hidden_,"onmousemove",this,function(e){
this.mouseMove_(e);
});
connect(this.hidden_,"onmouseout",this,function(e){
this.mouseOut_(e);
});
};
DateGraph.prototype.createPlotKitCanvas_=function(_58){
var h=document.createElement("canvas");
h.style.position="absolute";
h.style.top=_58.style.top;
h.style.left=_58.style.left;
h.width=this.width_;
h.height=this.height_;
MochiKit.DOM.appendChildNodes(this.graphDiv,h);
return h;
};
DateGraph.prototype.setColors_=function(_60){
var num=this.labels_.length;
this.colors_=[];
if(!_60.colors){
var sat=_60.colorSaturation||1;
var val=_60.colorValue||0.5;
for(var i=1;i<=num;i++){
var hue=(1*i/(1+num));
this.colors_.push(MochiKit.Color.Color.fromHSV(hue,sat,val));
}
}else{
for(var i=0;i<num;i++){
var _65=_60.colors[i%_60.colors.length];
this.colors_.push(MochiKit.Color.Color.fromString(_65));
}
}
};
DateGraph.prototype.createStatusMessage_=function(){
if(!this.labelsDiv_){
var _66=250;
var _67={"style":{"position":"absolute","fontSize":"14px","zIndex":10,"width":_66+"px","top":"0px","left":this.width_-_66+"px","background":"white","textAlign":"left","overflow":"hidden"}};
this.labelsDiv_=MochiKit.DOM.DIV(_67);
MochiKit.DOM.appendChildNodes(this.graphDiv,this.labelsDiv_);
}
};
DateGraph.prototype.createRollInterface_=function(){
var _68=this.plotter_.options.padding;
var _69={"type":"text","size":"2","value":this.rollPeriod_,"style":{"position":"absolute","zIndex":10,"top":(this.height_-25-_68.bottom)+"px","left":(_68.left+1)+"px"}};
var _70=MochiKit.DOM.INPUT(_69);
var pa=this.graphDiv;
MochiKit.DOM.appendChildNodes(pa,_70);
connect(_70,"onchange",this,function(){
this.adjustRoll(_70.value);
});
return _70;
};
DateGraph.prototype.createDragInterface_=function(){
var _72=this;
var _73=false;
var _74=null;
var _75=null;
var _76=null;
var _77=null;
var _78=null;
var px=PlotKit.Base.findPosX(this.canvas_);
var py=PlotKit.Base.findPosY(this.canvas_);
var _81=function(e){
return e.mouse().page.x-px;
};
var _82=function(e){
return e.mouse().page.y-py;
};
connect(this.hidden_,"onmousemove",function(_83){
if(_73){
_76=_81(_83);
_77=_82(_83);
_72.drawZoomRect_(_74,_76,_78);
_78=_76;
}
});
connect(this.hidden_,"onmousedown",function(_84){
_73=true;
_74=_81(_84);
_75=_82(_84);
});
connect(document,"onmouseup",this,function(_85){
if(_73){
_73=false;
_74=null;
_75=null;
}
});
connect(this.hidden_,"onmouseout",this,function(_86){
if(_73){
_76=null;
_77=null;
}
});
connect(this.hidden_,"onmouseup",this,function(_87){
if(_73){
_73=false;
_76=_81(_87);
_77=_82(_87);
var _88=Math.abs(_76-_74);
var _89=Math.abs(_77-_75);
if(_88<2&&_89<2&&_72.clickCallback_!=null&&_72.lastx_!=undefined){
_72.clickCallback_(_87,new Date(_72.lastx_));
}
if(_88>=10){
_72.doZoom_(Math.min(_74,_76),Math.max(_74,_76));
}else{
_72.canvas_.getContext("2d").clearRect(0,0,_72.canvas_.width,_72.canvas_.height);
}
_74=null;
_75=null;
}
});
connect(this.hidden_,"ondblclick",this,function(_90){
_72.dateWindow_=null;
_72.drawGraph_(_72.rawData_);
var _91=_72.rawData_[0][0];
var _92=_72.rawData_[_72.rawData_.length-1][0];
_72.zoomCallback_(_91,_92);
});
};
DateGraph.prototype.drawZoomRect_=function(_93,_94,_95){
var ctx=this.canvas_.getContext("2d");
if(_95){
ctx.clearRect(Math.min(_93,_95),0,Math.abs(_93-_95),this.height_);
}
if(_94&&_93){
ctx.fillStyle="rgba(128,128,128,0.33)";
ctx.fillRect(Math.min(_93,_94),0,Math.abs(_94-_93),this.height_);
}
};
DateGraph.prototype.doZoom_=function(_96,_97){
var _98=this.layout_.points;
var _99=null;
var _100=null;
for(var i=0;i<_98.length;i++){
var cx=_98[i].canvasx;
var x=_98[i].xval;
if(cx<_96&&(_99==null||x>_99)){
_99=x;
}
if(cx>_97&&(_100==null||x<_100)){
_100=x;
}
}
if(_99==null){
_99=_98[0].xval;
}
if(_100==null){
_100=_98[_98.length-1].xval;
}
this.dateWindow_=[_99,_100];
this.drawGraph_(this.rawData_);
this.zoomCallback_(_99,_100);
};
DateGraph.prototype.mouseMove_=function(_102){
var _103=_102.mouse().page.x-PlotKit.Base.findPosX(this.hidden_);
var _104=this.layout_.points;
var _105=-1;
var _106=-1;
var _107=1e+100;
var idx=-1;
for(var i=0;i<_104.length;i++){
var dist=Math.abs(_104[i].canvasx-_103);
if(dist>_107){
break;
}
_107=dist;
idx=i;
}
if(idx>=0){
_105=_104[idx].xval;
}
if(_103>_104[_104.length-1].canvasx){
_105=_104[_104.length-1].xval;
}
var _110=[];
for(var i=0;i<_104.length;i++){
if(_104[i].xval==_105){
_110.push(_104[i]);
}
}
var _111=3;
var ctx=this.canvas_.getContext("2d");
if(this.previousVerticalX_>=0){
var px=this.previousVerticalX_;
ctx.clearRect(px-_111-1,0,2*_111+2,this.height_);
}
if(_110.length>0){
var _103=_110[0].canvasx;
var _112=this.xValueFormatter_(_105)+":";
var clen=this.colors_.length;
for(var i=0;i<_110.length;i++){
if(this.labelsSeparateLines){
_112+="<br/>";
}
var _114=_110[i];
_112+=" <b><font color='"+this.colors_[i%clen].toHexString()+"'>"+_114.name+"</font></b>:"+this.round_(_114.yval,2);
}
this.labelsDiv_.innerHTML=_112;
this.lastx_=_105;
ctx.save();
for(var i=0;i<_110.length;i++){
ctx.beginPath();
ctx.fillStyle=this.colors_[i%clen].toRGBString();
ctx.arc(_103,_110[i%clen].canvasy,_111,0,360,false);
ctx.fill();
}
ctx.restore();
this.previousVerticalX_=_103;
}
};
DateGraph.prototype.mouseOut_=function(_115){
var ctx=this.canvas_.getContext("2d");
ctx.clearRect(0,0,this.width_,this.height_);
this.labelsDiv_.innerHTML="";
};
DateGraph.prototype.dateString_=function(date){
var d=new Date(date);
var year=""+d.getFullYear();
var _119=""+(d.getMonth()+1);
if(_119.length<2){
_119="0"+_119;
}
var day=""+d.getDate();
if(day.length<2){
day="0"+day;
}
return year+"/"+_119+"/"+day;
};
DateGraph.prototype.round_=function(num,_121){
var _122=Math.pow(10,_121);
return Math.round(num*_122)/_122;
};
DateGraph.prototype.loadedEvent_=function(data){
this.rawData_=this.parseCSV_(data);
this.drawGraph_(this.rawData_);
};
DateGraph.prototype.months=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
DateGraph.prototype.quarters=["Jan","Apr","Jul","Oct"];
DateGraph.prototype.addXTicks_=function(){
var _124,endDate;
if(this.dateWindow_){
_124=this.dateWindow_[0];
endDate=this.dateWindow_[1];
}else{
_124=this.rawData_[0][0];
endDate=this.rawData_[this.rawData_.length-1][0];
}
var _125=this.xTicker_(_124,endDate);
this.layout_.updateOptions({xTicks:_125});
};
DateGraph.prototype.dateTicker=function(_126,_127){
var _128=24*60*60*1000;
_126=_126/_128;
_127=_127/_128;
var _129=_127-_126;
var _130=[];
var _131=false;
var _132=1;
if(_129>30*366){
_131=true;
_130=["Jan"];
_132=10;
}else{
if(_129>4*366){
_130=["Jan"];
_131=true;
}else{
if(_129>366){
_130=this.quarters;
_131=true;
}else{
if(_129>40){
_130=this.months;
_131=true;
}else{
if(_129>10){
for(var week=_126-14;week<_127+14;week+=7){
_130.push(week*_128);
}
}else{
for(var day=_126-14;day<_127+14;day+=1){
_130.push(day*_128);
}
}
}
}
}
}
var _134=[];
if(_131){
var _135=1900+(new Date(_126*_128)).getYear();
var _136=1900+(new Date(_127*_128)).getYear();
for(var i=_135;i<=_136;i++){
if(i%_132!=0){
continue;
}
for(var j=0;j<_130.length;j++){
var date=Date.parse(_130[j]+" 1, "+i);
_134.push({label:_130[j]+"'"+(""+i).substr(2,2),v:date});
}
}
}else{
for(var i=0;i<_130.length;i++){
var date=new Date(_130[i]);
var year=date.getFullYear().toString();
var _137=this.months[date.getMonth()]+date.getDate();
_137+="'"+year.substr(year.length-2,2);
_134.push({label:_137,v:date});
}
}
return _134;
};
DateGraph.prototype.numericTicks=function(minV,maxV){
var _140;
if(maxV<=0){
_140=1;
}else{
_140=Math.pow(10,Math.floor(Math.log(maxV)/Math.log(10)));
}
var _141=(maxV-minV)/_140;
while(2*_141<20){
_141*=2;
}
if((maxV-minV)/_141<this.minTickSize_){
_141=this.round_((maxV-minV)/this.minTickSize_,1);
}
var _142=[];
for(var i=0;i<=_141;i++){
var _143=minV+i*(maxV-minV)/_141;
var _144=this.round_(_143,2);
if(this.labelsKMB_){
var k=1000;
if(_143>=k*k*k){
_144=this.round_(_143/(k*k*k),1)+"B";
}else{
if(_143>=k*k){
_144=this.round_(_143/(k*k),1)+"M";
}else{
if(_143>=k){
_144=this.round_(_143/k,1)+"K";
}
}
}
}
_142.push({label:_144,v:_143});
}
return _142;
};
DateGraph.prototype.addYTicks_=function(minY,maxY){
var _148=this.numericTicks(minY,maxY);
this.layout_.updateOptions({yAxis:[minY,maxY],yTicks:_148});
};
DateGraph.prototype.drawGraph_=function(data){
var maxY=null;
this.layout_.removeAllDatasets();
for(var i=1;i<data[0].length;i++){
var _149=[];
for(var j=0;j<data.length;j++){
var date=data[j][0];
_149[j]=[date,data[j][i]];
}
_149=this.rollingAverage(_149,this.rollPeriod_);
var bars=this.errorBars_||this.customBars_;
if(this.dateWindow_){
var low=this.dateWindow_[0];
var high=this.dateWindow_[1];
var _153=[];
for(var k=0;k<_149.length;k++){
if(_149[k][0]>=low&&_149[k][0]<=high){
_153.push(_149[k]);
var y=bars?_149[k][1][0]:_149[k][1];
if(maxY==null||y>maxY){
maxY=y;
}
}
}
_149=_153;
}else{
for(var j=0;j<_149.length;j++){
var y=bars?_149[j][1][0]:_149[j][1];
if(maxY==null||y>maxY){
maxY=bars?y+_149[j][1][1]:y;
}
}
}
if(bars){
var vals=[];
for(var j=0;j<_149.length;j++){
vals[j]=[_149[j][0],_149[j][1][0],_149[j][1][1],_149[j][1][2]];
}
this.layout_.addDataset(this.labels_[i-1],vals);
}else{
this.layout_.addDataset(this.labels_[i-1],_149);
}
}
if(this.valueRange_!=null){
this.addYTicks_(this.valueRange_[0],this.valueRange_[1]);
}else{
maxY*=1.1;
if(maxY<=0){
maxY=1;
}else{
var _155=Math.pow(10,Math.floor(Math.log(maxY)/Math.log(10)));
maxY=_155*Math.ceil(maxY/_155);
}
this.addYTicks_(0,maxY);
}
this.addXTicks_();
this.layout_.evaluateWithError();
this.plotter_.clear();
this.plotter_.render();
this.canvas_.getContext("2d").clearRect(0,0,this.canvas_.width,this.canvas_.height);
};
DateGraph.prototype.rollingAverage=function(_156,_157){
if(_156.length<2){
return _156;
}
var _157=Math.min(_157,_156.length-1);
var _158=[];
var _159=this.sigma_;
if(this.fractions_){
var num=0;
var den=0;
var mult=100;
for(var i=0;i<_156.length;i++){
num+=_156[i][1][0];
den+=_156[i][1][1];
if(i-_157>=0){
num-=_156[i-_157][1][0];
den-=_156[i-_157][1][1];
}
var date=_156[i][0];
var _162=den?num/den:0;
if(this.errorBars_){
if(this.wilsonInterval_){
if(den){
var p=_162<0?0:_162,n=den;
var pm=_159*Math.sqrt(p*(1-p)/n+_159*_159/(4*n*n));
var _165=1+_159*_159/den;
var low=(p+_159*_159/(2*den)-pm)/_165;
var high=(p+_159*_159/(2*den)+pm)/_165;
_158[i]=[date,[p*mult,(p-low)*mult,(high-p)*mult]];
}else{
_158[i]=[date,[0,0,0]];
}
}else{
var _166=den?_159*Math.sqrt(_162*(1-_162)/den):1;
_158[i]=[date,[mult*_162,mult*_166,mult*_166]];
}
}else{
_158[i]=[date,mult*_162];
}
}
}else{
if(this.customBars_){
for(var i=0;i<_156.length;i++){
var data=_156[i][1];
var y=data[1];
_158[i]=[_156[i][0],[y,y-data[0],data[2]-y]];
}
}else{
var _167=Math.min(_157-1,_156.length-2);
if(!this.errorBars_){
for(var i=0;i<_167;i++){
var sum=0;
for(var j=0;j<i+1;j++){
sum+=_156[j][1];
}
_158[i]=[_156[i][0],sum/(i+1)];
}
for(var i=Math.min(_157-1,_156.length-2);i<_156.length;i++){
var sum=0;
for(var j=i-_157+1;j<i+1;j++){
sum+=_156[j][1];
}
_158[i]=[_156[i][0],sum/_157];
}
}else{
for(var i=0;i<_167;i++){
var sum=0;
var _169=0;
for(var j=0;j<i+1;j++){
sum+=_156[j][1][0];
_169+=Math.pow(_156[j][1][1],2);
}
var _166=Math.sqrt(_169)/(i+1);
_158[i]=[_156[i][0],[sum/(i+1),_159*_166,_159*_166]];
}
for(var i=Math.min(_157-1,_156.length-2);i<_156.length;i++){
var sum=0;
var _169=0;
for(var j=i-_157+1;j<i+1;j++){
sum+=_156[j][1][0];
_169+=Math.pow(_156[j][1][1],2);
}
var _166=Math.sqrt(_169)/_157;
_158[i]=[_156[i][0],[sum/_157,_159*_166,_159*_166]];
}
}
}
}
return _158;
};
DateGraph.prototype.dateParser=function(_170){
var _171;
if(_170.search("-")!=-1){
_171=_170.replace("-","/","g");
}else{
if(_170.search("/")!=-1){
return Date.parse(_170);
}else{
_171=_170.substr(0,4)+"/"+_170.substr(4,2)+"/"+_170.substr(6,2);
}
}
return Date.parse(_171);
};
DateGraph.prototype.parseCSV_=function(data){
var ret=[];
var _173=data.split("\n");
var _174=this.labelsFromCSV_?1:0;
if(this.labelsFromCSV_){
var _175=_173[0].split(",");
_175.shift();
this.labels_=_175;
this.setColors_(this.attrs_);
this.renderOptions_.colorScheme=this.colors_;
MochiKit.Base.update(this.plotter_.options,this.renderOptions_);
MochiKit.Base.update(this.layoutOptions_,this.attrs_);
}
for(var i=_174;i<_173.length;i++){
var line=_173[i];
if(line.length==0){
continue;
}
var _177=line.split(",");
if(_177.length<2){
continue;
}
var _178=[];
_178[0]=this.xValueParser_(_177[0]);
if(this.fractions_){
for(var j=1;j<_177.length;j++){
var vals=_177[j].split("/");
_178[j]=[parseFloat(vals[0]),parseFloat(vals[1])];
}
}else{
if(this.errorBars_){
for(var j=1;j<_177.length;j+=2){
_178[(j+1)/2]=[parseFloat(_177[j]),parseFloat(_177[j+1])];
}
}else{
if(this.customBars_){
for(var j=1;j<_177.length;j++){
var vals=_177[j].split(";");
_178[j]=[parseFloat(vals[0]),parseFloat(vals[1]),parseFloat(vals[2])];
}
}else{
for(var j=1;j<_177.length;j++){
_178[j]=parseFloat(_177[j]);
}
}
}
}
ret.push(_178);
}
return ret;
};
DateGraph.prototype.start_=function(){
if(typeof this.file_=="function"){
this.loadedEvent_(this.file_());
}else{
var req=new XMLHttpRequest();
var _180=this;
req.onreadystatechange=function(){
if(req.readyState==4){
if(req.status==200){
_180.loadedEvent_(req.responseText);
}
}
};
req.open("GET",this.file_,true);
req.send(null);
}
};
DateGraph.prototype.updateOptions=function(_181){
if(_181.errorBars){
this.errorBars_=_181.errorBars;
}
if(_181.customBars){
this.customBars_=_181.customBars;
}
if(_181.strokeWidth){
this.strokeWidth_=_181.strokeWidth;
}
if(_181.rollPeriod){
this.rollPeriod_=_181.rollPeriod;
}
if(_181.dateWindow){
this.dateWindow_=_181.dateWindow;
}
if(_181.valueRange){
this.valueRange_=_181.valueRange;
}
if(_181.minTickSize){
this.minTickSize_=_181.minTickSize;
}
if(typeof (_181.labels)!="undefined"){
this.labels_=_181.labels;
this.labelsFromCSV_=(_181.labels==null);
}
this.layout_.updateOptions({"errorBars":this.errorBars_});
if(_181["file"]&&_181["file"]!=this.file_){
this.file_=_181["file"];
this.start_();
}else{
this.drawGraph_(this.rawData_);
}
};
DateGraph.prototype.adjustRoll=function(_182){
this.rollPeriod_=_182;
this.drawGraph_(this.rawData_);
};

